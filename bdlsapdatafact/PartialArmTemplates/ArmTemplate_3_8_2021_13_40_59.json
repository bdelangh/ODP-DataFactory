{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "bdlsapdatafact"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SkipLoopOData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getCount",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://52.183.47.112:54000/sap/opu/odata/sap/sd_f1814_so_fs_srv/C_Salesorderitemfs/$count?sap-client=100",
							"method": "GET",
							"authentication": {
								"type": "Basic",
								"username": "ODATAUSER",
								"password": {
									"type": "AzureKeyVaultSecret",
									"store": {
										"referenceName": "mykeyvaultbdl",
										"type": "LinkedServiceReference"
									},
									"secretName": "oDataUser"
								}
							}
						}
					},
					{
						"name": "getArray",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "range",
							"value": {
								"value": "@range(0, add(div(int(activity('getCount').output.Response),pipeline().parameters.batchSize),1))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "getArray",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('range')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyToDataLake",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapEccSource",
											"httpRequestTimeout": "00:05:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "S4DSalesOrderItemsSkip",
											"type": "DatasetReference",
											"parameters": {
												"top": {
													"value": "@pipeline().parameters.batchSize",
													"type": "Expression"
												},
												"skip": {
													"value": "@mul(item(),pipeline().parameters.batchSize)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "S4DVBAKDataLake",
											"type": "DatasetReference",
											"parameters": {
												"fileID": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"batchSize": {
						"type": "int",
						"defaultValue": 1000
					}
				},
				"variables": {
					"range": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}