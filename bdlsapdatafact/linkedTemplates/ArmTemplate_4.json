{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "bdlsapdatafact"
		},
		"NPLTable_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'NPLTable'"
		},
		"NPL_BWMDX_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'NPL_BWMDX'"
		},
		"NPL_BWOpenHub_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'NPL_BWOpenHub'"
		},
		"S4DCLNT100_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'S4DCLNT100'"
		},
		"S4HHANA_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'S4HHANA'"
		},
		"S4SGBBDemoTableCon_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'S4SGBBDemoTableCon'"
		},
		"myGBBDemoTableCon_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'myGBBDemoTableCon'"
		},
		"NPLTable_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "001"
		},
		"NPLTable_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ADFUSER"
		},
		"NPLTable_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "10.6.1.6"
		},
		"NPLTable_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"NPL_BWMDX_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "137.117.134.161"
		},
		"NPL_BWMDX_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"NPL_BWMDX_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "001"
		},
		"NPL_BWMDX_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "MDXUSER"
		},
		"NPL_BWOpenHub_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "001"
		},
		"NPL_BWOpenHub_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "OPENHUB"
		},
		"NPL_BWOpenHub_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "137.117.134.161"
		},
		"NPL_BWOpenHub_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"S4DCLNT100_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "100"
		},
		"S4DCLNT100_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ADFUSER"
		},
		"S4DCLNT100_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "52.183.47.112"
		},
		"S4DCLNT100_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "40"
		},
		"S4SGBBDemoTableCon_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "100"
		},
		"S4SGBBDemoTableCon_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "DEVELOPER"
		},
		"S4SGBBDemoTableCon_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "51.143.115.209"
		},
		"S4SGBBDemoTableCon_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "40"
		},
		"myGBBDemoTableCon_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "100"
		},
		"myGBBDemoTableCon_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ADFUSER"
		},
		"myGBBDemoTableCon_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "20.71.235.137"
		},
		"myGBBDemoTableCon_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "40"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/myS4SSalesOrders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "myGBBS4S"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('myS4SSalesOrders',utcnow(),'.csv')",
							"type": "Expression"
						},
						"folderPath": "myS4S",
						"fileSystem": "sap"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/myS4SSalesOrdersAll')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "myGBBS4S"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "myS4SSalesOrdersAll.csv",
						"folderPath": "myS4S",
						"fileSystem": "sap"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/myS4SSalesOrdersIn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "myGBBS4S"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "myS4SSalesOrders2021-01-18T09:28:03.3604797Z.csv",
						"folderPath": "myS4S",
						"fileSystem": "sap"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "BILLINGCOMPANYCODE",
						"type": "String"
					},
					{
						"name": "BILLINGDOCUMENTDATE",
						"type": "String"
					},
					{
						"name": "COUNTRY",
						"type": "String"
					},
					{
						"name": "CREATIONDATE",
						"type": "String"
					},
					{
						"name": "CREATIONTIME",
						"type": "String"
					},
					{
						"name": "CREDITCONTROLAREA",
						"type": "String"
					},
					{
						"name": "CUSTOMERGROUP",
						"type": "String"
					},
					{
						"name": "CUSTOMERNAME",
						"type": "String"
					},
					{
						"name": "DISTRIBUTIONCHANNEL",
						"type": "String"
					},
					{
						"name": "HEADERBILLINGBLOCKREASON",
						"type": "String"
					},
					{
						"name": "LASTCHANGEDATE",
						"type": "String"
					},
					{
						"name": "LASTCHANGEDATETIME",
						"type": "String"
					},
					{
						"name": "MANDT",
						"type": "String"
					},
					{
						"name": "ORGANIZATIONDIVISION",
						"type": "String"
					},
					{
						"name": "PRICINGDATE",
						"type": "String"
					},
					{
						"name": "PURCHASEORDERBYCUSTOMER",
						"type": "String"
					},
					{
						"name": "SALESDOCUMENT",
						"type": "String"
					},
					{
						"name": "SALESDOCUMENTPROCESSINGTYPE",
						"type": "String"
					},
					{
						"name": "SALESDOCUMENTTYPE",
						"type": "String"
					},
					{
						"name": "SALESGROUP",
						"type": "String"
					},
					{
						"name": "SALESOFFICE",
						"type": "String"
					},
					{
						"name": "SALESORGANIZATION",
						"type": "String"
					},
					{
						"name": "SDDOCUMENTCATEGORY",
						"type": "String"
					},
					{
						"name": "SOLDTOPARTY",
						"type": "String"
					},
					{
						"name": "TOTALNETAMOUNT",
						"type": "String"
					},
					{
						"name": "TRANSACTIONCURRENCY",
						"type": "String"
					},
					{
						"name": "CITYNAME",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLTable')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('NPLTable_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('NPLTable_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('NPLTable_password')]"
					},
					"server": "[parameters('NPLTable_properties_typeProperties_server')]",
					"systemNumber": "[parameters('NPLTable_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SAPADFRti",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPL_BWMDX')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapBw",
				"typeProperties": {
					"server": "[parameters('NPL_BWMDX_properties_typeProperties_server')]",
					"systemNumber": "[parameters('NPL_BWMDX_properties_typeProperties_systemNumber')]",
					"clientId": "[parameters('NPL_BWMDX_properties_typeProperties_clientId')]",
					"userName": "[parameters('NPL_BWMDX_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('NPL_BWMDX_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SAPADFRti",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPL_BWOpenHub')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "NPL_BWOpenHub",
				"annotations": [],
				"type": "SapOpenHub",
				"typeProperties": {
					"clientId": "[parameters('NPL_BWOpenHub_properties_typeProperties_clientId')]",
					"language": "EN",
					"userName": "[parameters('NPL_BWOpenHub_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('NPL_BWOpenHub_password')]"
					},
					"server": "[parameters('NPL_BWOpenHub_properties_typeProperties_server')]",
					"systemNumber": "[parameters('NPL_BWOpenHub_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SAPADFRti",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4DCLNT100')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('S4DCLNT100_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('S4DCLNT100_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('S4DCLNT100_password')]"
					},
					"server": "[parameters('S4DCLNT100_properties_typeProperties_server')]",
					"systemNumber": "[parameters('S4DCLNT100_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SAPADFRti",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4HHANA')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapHana",
				"typeProperties": {
					"connectionString": "[parameters('S4HHANA_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SAPADFRti",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4SGBBDemoTableCon')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('S4SGBBDemoTableCon_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('S4SGBBDemoTableCon_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('S4SGBBDemoTableCon_password')]"
					},
					"server": "[parameters('S4SGBBDemoTableCon_properties_typeProperties_server')]",
					"systemNumber": "[parameters('S4SGBBDemoTableCon_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SAPADFRti",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/myGBBDemoTableCon')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('myGBBDemoTableCon_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('myGBBDemoTableCon_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('myGBBDemoTableCon_password')]"
					},
					"server": "[parameters('myGBBDemoTableCon_properties_typeProperties_server')]",
					"systemNumber": "[parameters('myGBBDemoTableCon_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SAPADFRti",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDailyGameData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyGameDataBlob_to_SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": false
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Player": "player",
									"Time": "time",
									"Points": "points"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DailyGameData_Blob",
								"type": "DatasetReference",
								"parameters": {
									"dsFileName": {
										"value": "@pipeline().parameters.bdlPipeLineFileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "GameData_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"bdlPipeLineFileName": {
						"type": "String",
						"defaultValue": "test.csv"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ES5SalesOrderSet_to_AzDL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract SalesOrderSet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource",
								"httpRequestTimeout": "00:05:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ES5SalesOrderSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BdlAzDL_ES5SalesOrderSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ES5"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetS4HSalesOrders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSalesOrders",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[spOverwriteS4HSO]",
								"sqlWriterTableType": "S4HSalesOrder",
								"storedProcedureTableTypeParameterName": "SalesOrders",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SALESDOCUMENT",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										},
										"sink": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "CREATIONDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CREATIONTIME",
											"type": "TimeSpan"
										},
										"sink": {
											"name": "CREATIONTIME",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "LASTCHANGEDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										},
										"sink": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "SALESORGANIZATION",
											"type": "String"
										},
										"sink": {
											"name": "SALESORGANIZATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										},
										"sink": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										},
										"sink": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESGROUP",
											"type": "String"
										},
										"sink": {
											"name": "SALESGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESOFFICE",
											"type": "String"
										},
										"sink": {
											"name": "SALESOFFICE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										},
										"sink": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRICINGDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "PRICINGDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "RETAILPROMOTION",
											"type": "String"
										},
										"sink": {
											"name": "RETAILPROMOTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTCONDITION",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTCONDITION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ODQ_CHANGEMODE",
											"type": "String"
										},
										"sink": {
											"name": "ODQ_CHANGEMODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ODQ_ENTITYCNTR",
											"type": "Decimal"
										},
										"sink": {
											"name": "ODQ_ENTITYCNTR",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "S4H_SalesOrders",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "S4H_SalesOrdersSQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4H"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetS4HSalesOrders_Delta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Updated SalesOrders",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get DeltaToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[spOverwriteS4HSO]",
								"sqlWriterTableType": "S4HSalesOrder",
								"storedProcedureTableTypeParameterName": "SalesOrders",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SALESDOCUMENT",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										},
										"sink": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "CREATIONDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CREATIONTIME",
											"type": "TimeSpan"
										},
										"sink": {
											"name": "CREATIONTIME",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "LASTCHANGEDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										},
										"sink": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "SALESORGANIZATION",
											"type": "String"
										},
										"sink": {
											"name": "SALESORGANIZATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										},
										"sink": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										},
										"sink": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESGROUP",
											"type": "String"
										},
										"sink": {
											"name": "SALESGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESOFFICE",
											"type": "String"
										},
										"sink": {
											"name": "SALESOFFICE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										},
										"sink": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRICINGDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "PRICINGDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "RETAILPROMOTION",
											"type": "String"
										},
										"sink": {
											"name": "RETAILPROMOTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTCONDITION",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTCONDITION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ODQ_CHANGEMODE",
											"type": "String"
										},
										"sink": {
											"name": "ODQ_CHANGEMODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ODQ_ENTITYCNTR",
											"type": "Decimal"
										},
										"sink": {
											"name": "ODQ_ENTITYCNTR",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "S4H_SalesOrderByToken",
								"type": "DatasetReference",
								"parameters": {
									"Token": "@activity('Get DeltaToken').output.DeltaToken"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "S4H_SalesOrdersSQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get DeltaToken",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "GetODPDeltaToken",
							"method": "GET",
							"headers": {},
							"body": {
								"name": "Azure Function Call"
							}
						},
						"linkedServiceName": {
							"referenceName": "ODPFunction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "S4H"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncrementalPersons')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupOldWatermarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select * from watermarktable where TableName = 'persons';",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WaterMark_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LookupNewWaterMarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select MAX(LastModifytime) as NewWatermarkvalue from persons",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Persons_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IncrementalCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupNewWaterMarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupOldWatermarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from persons where LastModifytime > '@{activity('LookupOldWatermarkActivity').output.firstrow.watermarkvalue}' and LastModifytime <= '@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}';",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Persons_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Persons_Incremental",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "StoredProceduretoWriteWatermarkActivity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IncrementalCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": {
										"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.TableName}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "bdlsqldatadb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProducts_Incremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupWaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select * from watermarktable where TableName='NPLProducts';",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WaterMark_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IncrementalCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource",
								"query": {
									"value": "$filter=LastModified%20gt%20datetime%27@{activity('LookupWaterMark').output.firstRow.WaterMarkValue}%27",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"sqlWriterStoredProcedureName": "[[dbo].[spOverwriteProducts]",
								"sqlWriterTableType": "NPLProductsType",
								"storedProcedureTableTypeParameterName": "Products"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Id": "id",
									"CurrencyCode": "currencycode",
									"StockQuantity": "stockquantity",
									"Name": "name",
									"Description": "description",
									"SubCategoryId": "subcategoryid",
									"SubCategoryName": "subcategoryname",
									"MainCategoryId": "maincategoryid",
									"MainCategoryName": "maincategoryname",
									"SupplierId": "supplierid",
									"SupplierName": "suppliername",
									"LastModified": "lastmodified",
									"Price": "price",
									"QuantityUnit": "quantityunit",
									"MeasureUnit": "measureunit"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "NPL_Products",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NPLProducts_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "UpdateWaterMark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IncrementalCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "NPLProducts",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "bdlsqldatadb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProducts_To_DataLake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NPLProducts_To_DataLake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource"
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "NPL_Products",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BDL_AzDL_NPLProducts",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProducts_To_DataLake2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NPLProducts_To_DataLake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "NPL_Products",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLProducts_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProducts_To_DataLake2_Incr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Get Product Deltas based on LastModified dates",
				"activities": [
					{
						"name": "Incremental NPLProducts_To_DataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource",
								"query": {
									"value": "$filter=LastModified%20gt%20datetime%27@{activity('LookupWaterMark').output.firstRow.WaterMarkValue}%27",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "NPL_Products",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLProducts_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LookupWaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from watermarktable where TableName='NPLProductsDL';",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WaterMark_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Incremental NPLProducts_To_DataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "NPLProductsDL",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "bdlsqldatadb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProducts_To_DataLake2_Incr_Complete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Get Product Deltas based on LastModified dates",
				"activities": [
					{
						"name": "Incremental NPLProducts_To_DataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource",
								"query": {
									"value": "$filter=LastModified%20gt%20datetime%27@{activity('LookupWaterMark').output.firstRow.WaterMarkValue}%27",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "NPL_Products",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLProducts_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LookupWaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from watermarktable where TableName='NPLProductsDL';",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WaterMark_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Incremental NPLProducts_To_DataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "NPLProductsDL",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "bdlsqldatadb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "MergeUpdates",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update Watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/badelang@microsoft.com/ADFMerge"
						},
						"linkedServiceName": {
							"referenceName": "adfdatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}