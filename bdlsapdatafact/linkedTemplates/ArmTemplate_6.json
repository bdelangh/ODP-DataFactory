{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "bdlsapdatafact"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BW OpenHub Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "OpenHub",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapOpenHubSource",
								"baseRequestId": 9879,
								"excludeLastRequest": false
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "BW_NPL_OpenHub_NW_C01",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLOpenHub",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "BW_NPL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyCOEPTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyCOEPTable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "BUZEI EQ 2 AND PERIO EQ 3",
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "PartitionOnCalendarYear",
								"partitionSettings": {
									"partitionColumnName": "GJAHR",
									"partitionUpperBound": "2019",
									"partitionLowerBound": "2016",
									"maxPartitionsNumber": 4
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "COEPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "S4DCOEPData",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractVBAKData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractVBAKData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "VBAKTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "S4DVBAKDataLake",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMaintOrderHeaders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract MaintenanceOrder Headers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapHanaSource",
								"query": "select * from \"SAPHANADB\".\"AUFK\" where \"AUTYP\"=30",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MARATableHANA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MaintenanceOrdersCsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4H"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMaraUsingHANA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract Mara Table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapHanaSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MARATableHANA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MARAcsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4H"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncrementalCopyFromSAPTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFromSAPTable",
						"description": "Copy incremental data from SAP table to AzureBlobStorage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupLastCopiedDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "@{concat(pipeline().parameters.SapTableDateColumn,' LE ',formatDateTime(adddays(pipeline().TriggerTime,-1),'yyyyMMdd'), ' AND ',pipeline().parameters.SapTableDateColumn,' GE ', formatDateTime(activity('LookupLastCopiedDate').output.firstRow.Prop_0, 'yyyyMMdd'))}",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SAPTableSource_Incremental",
								"type": "DatasetReference",
								"parameters": {
									"SapTableName": {
										"value": "@pipeline().parameters.SapTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedTextSink",
								"type": "DatasetReference",
								"parameters": {
									"DelimitedTextSinkContainer": {
										"value": "@pipeline().parameters.DelimitedTextSinkContainer",
										"type": "Expression"
									},
									"DelimitedTextSinkDirectory": {
										"value": "@pipeline().parameters.DelimitedTextSinkDirectory",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LookupLastCopiedDate",
						"description": "Copy incremental data from SAP table to AzureBlobStorage",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AzureBlobDelimitedDataset",
								"type": "DatasetReference",
								"parameters": {
									"HighWatermarkBlobDirectory": {
										"value": "@pipeline().parameters.HighWatermarkBlobDirectory",
										"type": "Expression"
									},
									"HighWatermarkBlobName": {
										"value": "@pipeline().parameters.HighWatermarkBlobName",
										"type": "Expression"
									},
									"HighWatermarkBlobContainer": {
										"value": "@pipeline().parameters.HighWatermarkBlobContainer",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "SetLastCopiedDate",
						"description": "Store the last copied date into blob by calling Logic App",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CopyFromSAPTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.LogicAppURL",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\"copiedDate\":\"@{pipeline().TriggerTime}\"",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"HighWatermarkBlobDirectory": {
						"type": "string"
					},
					"HighWatermarkBlobName": {
						"type": "string"
					},
					"HighWatermarkBlobContainer": {
						"type": "string"
					},
					"SapTableName": {
						"type": "string"
					},
					"DelimitedTextSinkContainer": {
						"type": "string"
					},
					"DelimitedTextSinkDirectory": {
						"type": "string"
					},
					"LogicAppURL": {
						"type": "string"
					},
					"SapTableDateColumn": {
						"type": "string"
					}
				},
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProductsTable_To_DataLake2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NPLProductsTable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "NPLProductsTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLProducts_csv_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProductsTable_To_DataLake2_Incr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NPLProductsTableIncr",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "@{concat('LASTMODIFIED GE ', formatDateTime(activity('LookupWaterMark').output.firstRow.WatermarkValue, 'yyyyMMdd'))}",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"rfcTableFields": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "NPLProductsTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLProducts_csv_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LookupWaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select * from watermarktable where TableName='NPLProductsTable';",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WaterMark_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "NPLProductsTableIncr",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "NPLProductsTable",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "bdlsqldatadb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PaymentDataFromCosmosDBDF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PaymentDataFromCosmosDB",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ExtractPaymentsFromCosmosDB",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PaymentDataCosmosDB": {},
									"PaymentDateSynapse": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"folderPath": "synapsestaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PaymentsFromCosmosDBDF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CosmosDbToAzDL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"preferredRegions": []
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['PaymentNr']"
										},
										"sink": {
											"name": "PaymentNr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SalesOrderNr']"
										},
										"sink": {
											"name": "SalesOrderNr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CustomerNr']"
										},
										"sink": {
											"name": "CustomerNr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CustomerName']"
										},
										"sink": {
											"name": "CustomerName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['PaymentDate']"
										},
										"sink": {
											"name": "PaymentDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Value']"
										},
										"sink": {
											"name": "Value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Currency']"
										},
										"sink": {
											"name": "Currency",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CosmosS4D_Payments",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Payments_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TransformSynapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "CosmosDbToAzDL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataLakePaymentsToSynapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PaymentsAzDL": {},
									"SynapePayments": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"folderPath": "synapsestaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "S4D_MicroHack/NotUsed"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RetrieveSAPTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Retrieve Table List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ControlTable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Retrieve Table List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Retrieve Table List').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy SAP Table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "S4DTable",
											"type": "DatasetReference",
											"parameters": {
												"tableName": {
													"value": "@item().tableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "S4DDataLakeFile",
											"type": "DatasetReference",
											"parameters": {
												"dirName": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"fileName": {
													"value": "@concat(item().tableName,'_',pipeline().RunId,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4SSalesOrderHeadersToMySynapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract SalesOrderHeaders",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"path": "synapsestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BILLINGCOMPANYCODE",
											"type": "String"
										},
										"sink": {
											"name": "BILLINGCOMPANYCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILLINGDOCUMENTDATE",
											"type": "String"
										},
										"sink": {
											"name": "BILLINGDOCUMENTDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "COUNTRY",
											"type": "String"
										},
										"sink": {
											"name": "COUNTRY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONDATE"
										},
										"sink": {
											"name": "CREATIONDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONTIME",
											"type": "String"
										},
										"sink": {
											"name": "CREATIONTIME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREDITCONTROLAREA",
											"type": "String"
										},
										"sink": {
											"name": "CREDITCONTROLAREA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERACCOUNTGROUP",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMERACCOUNTGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERGROUP",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMERGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERNAME",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMERNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										},
										"sink": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATE",
											"type": "String"
										},
										"sink": {
											"name": "LASTCHANGEDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										},
										"sink": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "MANDT",
											"type": "String"
										},
										"sink": {
											"name": "MANDT",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										},
										"sink": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRICINGDATE",
											"type": "String"
										},
										"sink": {
											"name": "PRICINGDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDISTRICT",
											"type": "String"
										},
										"sink": {
											"name": "SALESDISTRICT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENT",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESGROUP",
											"type": "String"
										},
										"sink": {
											"name": "SALESGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESOFFICE",
											"type": "String"
										},
										"sink": {
											"name": "SALESOFFICE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESORGANIZATION",
											"type": "String"
										},
										"sink": {
											"name": "SALESORGANIZATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										},
										"sink": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SOLDTOPARTY",
											"type": "String"
										},
										"sink": {
											"name": "SOLDTOPARTY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TOTALNETAMOUNT",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALNETAMOUNT",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										},
										"sink": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CITYNAME",
											"type": "String"
										},
										"sink": {
											"name": "CITYNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "POSTALCODE",
											"type": "String"
										},
										"sink": {
											"name": "POSTALCODE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ZBD_ISALESDOC_E",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SynSalesOrderHeaders",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "myS4S"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesOrderHeadersFromS4D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SalesOdersHeadersfromS4D",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None",
								"convertDateToDatetime": true,
								"convertTimeToTimespan": true
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"path": "synapsestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BILLINGCOMPANYCODE",
											"type": "String"
										},
										"sink": {
											"name": "BILLINGCOMPANYCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILLINGDOCUMENTDATE",
											"type": "String"
										},
										"sink": {
											"name": "BILLINGDOCUMENTDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "COUNTRY",
											"type": "String"
										},
										"sink": {
											"name": "COUNTRY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONDATE",
											"type": "String"
										},
										"sink": {
											"name": "CREATIONDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CREATIONTIME",
											"type": "String"
										},
										"sink": {
											"name": "CREATIONTIME",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "CREDITCONTROLAREA",
											"type": "String"
										},
										"sink": {
											"name": "CREDITCONTROLAREA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERACCOUNTGROUP",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMERACCOUNTGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERGROUP",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMERGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERNAME",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMERNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										},
										"sink": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATE",
											"type": "String"
										},
										"sink": {
											"name": "LASTCHANGEDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										},
										"sink": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "MANDT",
											"type": "String"
										},
										"sink": {
											"name": "MANDT",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										},
										"sink": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRICINGDATE",
											"type": "String"
										},
										"sink": {
											"name": "PRICINGDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDISTRICT",
											"type": "String"
										},
										"sink": {
											"name": "SALESDISTRICT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENT",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESGROUP",
											"type": "String"
										},
										"sink": {
											"name": "SALESGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESOFFICE",
											"type": "String"
										},
										"sink": {
											"name": "SALESOFFICE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESORGANIZATION",
											"type": "String"
										},
										"sink": {
											"name": "SALESORGANIZATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										},
										"sink": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SOLDTOPARTY",
											"type": "String"
										},
										"sink": {
											"name": "SOLDTOPARTY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TOTALNETAMOUNT",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALNETAMOUNT",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										},
										"sink": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CITYNAME",
											"type": "String"
										},
										"sink": {
											"name": "CITYNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "POSTALCODE",
											"type": "String"
										},
										"sink": {
											"name": "POSTALCODE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "S4D_SalesOrderHeaders",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SynSalesOrderHeaders",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesOrderHeadersFromS4DDF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractSalesOrderHeadersToAzDL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"path": "synapsestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MANDT",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "MANDT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENT",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SALESDOCUMENT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONDATE",
											"type": "String",
											"physicalType": "D"
										},
										"sink": {
											"name": "CREATIONDATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONTIME",
											"type": "String",
											"physicalType": "T"
										},
										"sink": {
											"name": "CREATIONTIME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATE",
											"type": "String",
											"physicalType": "D"
										},
										"sink": {
											"name": "LASTCHANGEDATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal",
											"physicalType": "P"
										},
										"sink": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "SALESORGANIZATION",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SALESORGANIZATION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALESGROUP",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SALESGROUP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALESOFFICE",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SALESOFFICE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SOLDTOPARTY",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SOLDTOPARTY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERNAME",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "CUSTOMERNAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COUNTRY",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "COUNTRY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CITYNAME",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "CITYNAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "POSTALCODE",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "POSTALCODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERACCOUNTGROUP",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "CUSTOMERACCOUNTGROUP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALESDISTRICT",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SALESDISTRICT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERGROUP",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "CUSTOMERGROUP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CREDITCONTROLAREA",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "CREDITCONTROLAREA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TOTALNETAMOUNT",
											"type": "Decimal",
											"physicalType": "P"
										},
										"sink": {
											"name": "TOTALNETAMOUNT",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRICINGDATE",
											"type": "String",
											"physicalType": "D"
										},
										"sink": {
											"name": "PRICINGDATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BILLINGDOCUMENTDATE",
											"type": "String",
											"physicalType": "D"
										},
										"sink": {
											"name": "BILLINGDOCUMENTDATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BILLINGCOMPANYCODE",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "BILLINGCOMPANYCODE",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "S4D_SalesOrderHeaders",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "S4DSalesOrderHeadersCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/myS4S_BD_ISALESDOC_A')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy All Order Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ZBD_ISALESDOC_A",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "myS4SSalesOrdersAll",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "myS4S"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/myS4S_BD_ISALESDOC_E')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract Sales Data to DataLake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "",
								"customRfcReadTableFunctionModule": "",
								"rfcTableFields": "BILLINGCOMPANYCODE,BILLINGDOCUMENTDATE,COUNTRY,CREATIONDATE,CREATIONTIME,CREDITCONTROLAREA,CUSTOMERGROUP,CUSTOMERNAME,DISTRIBUTIONCHANNEL,HEADERBILLINGBLOCKREASON,LASTCHANGEDATE,LASTCHANGEDATETIME,MANDT,ORGANIZATIONDIVISION,PRICINGDATE,PURCHASEORDERBYCUSTOMER,SALESDOCUMENT,SALESDOCUMENTPROCESSINGTYPE,SALESDOCUMENTTYPE,SALESGROUP,SALESOFFICE,SALESORGANIZATION,SDDOCUMENTCATEGORY,SOLDTOPARTY,TOTALNETAMOUNT,TRANSACTIONCURRENCY,CITYNAME",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ZBD_ISALESDOC_E",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "myS4SSalesOrders",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "myS4S"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}