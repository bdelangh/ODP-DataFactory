{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "bdlsapdatafact"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SAPTableSource_Incremental')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NPLTable",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SapTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().SapTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZBD_ISALESDOC_A')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myGBBDemoTableCon",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "myGBBS4S"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "ZBD_ISALESDOC_A"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZBD_ISALESDOC_E')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myGBBDemoTableCon",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "myGBBS4S"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "ZBD_ISALESDOC_E"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLakePaymentsToSynapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PaymentsFromAzDL",
								"type": "DatasetReference"
							},
							"name": "PaymentsAzDL"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SynPaymentsS4D",
								"type": "DatasetReference"
							},
							"name": "SynapePayments"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tPaymentNr as string,\n\t\tSalesOrderNr as string,\n\t\tCustomerNr as string,\n\t\tCustomerName as string,\n\t\tPaymentDate as date 'yyyy-MM-dd',\n\t\tValue as decimal(15,2) '000,000,000.000',\n\t\tCurrency as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdateFormats: ['yyyy-MM-dd']) ~> PaymentsAzDL\nPaymentsAzDL sink(input(\n\t\tPaymentNr as string,\n\t\tSalesOrderNr as string,\n\t\tCustomerNr as string,\n\t\tCustomerName as string,\n\t\tPaymentDate as date,\n\t\tPaymentValue as decimal(15,2),\n\t\tCurrency as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tmapColumn(\n\t\tPaymentNr,\n\t\tSalesOrderNr,\n\t\tCustomerNr,\n\t\tCustomerName,\n\t\tPaymentDate,\n\t\tPaymentValue = Value,\n\t\tCurrency\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SynapePayments"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractPaymentsFromCosmosDB')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MicroHack"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CosmosS4D_Payments",
								"type": "DatasetReference"
							},
							"name": "PaymentDataCosmosDB"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SynPaymentsS4D",
								"type": "DatasetReference"
							},
							"name": "PaymentDateSynapse"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tPaymentNr as string,\n\t\tSalesOrderNr as string,\n\t\tCustomerNr as string,\n\t\tCustomerName as string,\n\t\tPaymentDate as string,\n\t\tValue as string,\n\t\tCurrency as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'document') ~> PaymentDataCosmosDB\nPaymentDataCosmosDB derive(PaymentDateD = toDate(PaymentDate , 'yyyy-MM-dd'),\n\t\tValueD = toDecimal(Value, 15, 2)) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tPaymentNr as string,\n\t\tSalesOrderNr as string,\n\t\tCustomerNr as string,\n\t\tCustomerName as string,\n\t\tPaymentDate as date,\n\t\tPaymentValue as decimal(15,2),\n\t\tCurrency as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tmapColumn(\n\t\tPaymentNr,\n\t\tSalesOrderNr,\n\t\tCustomerNr,\n\t\tCustomerName,\n\t\tPaymentDate = PaymentDateD,\n\t\tPaymentValue = ValueD,\n\t\tCurrency\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PaymentDateSynapse"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MergeVBAKandVBAP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "S4DVBAKDataLake",
								"type": "DatasetReference"
							},
							"name": "VBAKDL"
						},
						{
							"dataset": {
								"referenceName": "S4DVBAPDataLake",
								"type": "DatasetReference"
							},
							"name": "VBAPDL"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "S4DMergedSalesDataFolder",
								"type": "DatasetReference"
							},
							"name": "MergedSalesData"
						}
					],
					"transformations": [
						{
							"name": "SalesData"
						}
					],
					"script": "source(output(\n\t\tMANDT as short,\n\t\tVBELN as integer,\n\t\tERDAT as date,\n\t\tERZET as integer,\n\t\tERNAM as string,\n\t\tANGDT as integer,\n\t\tBNDDT as integer,\n\t\tAUDAT as date,\n\t\tVBTYP as string,\n\t\tTRVOG as short,\n\t\tAUART as string,\n\t\tAUGRU as short,\n\t\tGWLDT as short,\n\t\tSUBMI as string,\n\t\tLIFSK as string,\n\t\tFAKSK as string,\n\t\tNETWR as double,\n\t\tWAERK as string,\n\t\tVKORG as short,\n\t\tVTWEG as short,\n\t\tSPART as short,\n\t\tVKGRP as short,\n\t\tVKBUR as short,\n\t\tGSBER as string,\n\t\tGSKST as string,\n\t\tGUEBG as integer,\n\t\tGUEEN as integer,\n\t\tKNUMV as short,\n\t\tVDATU as integer,\n\t\tVPRGR as boolean,\n\t\tAUTLF as string,\n\t\tVBKLA as string,\n\t\tVBKLT as string,\n\t\tKALSM as string,\n\t\tVSBED as string,\n\t\tFKARA as string,\n\t\tAWAHR as short,\n\t\tKTEXT as string,\n\t\tBSTNK as string,\n\t\tBSARK as string,\n\t\tBSTDK as integer,\n\t\tBSTZD as string,\n\t\tIHREZ as string,\n\t\tBNAME as string,\n\t\tTELF1 as string,\n\t\tMAHZA as boolean,\n\t\tMAHDT as short,\n\t\tKUNNR as string,\n\t\tKOSTL as string,\n\t\tSTAFO as string,\n\t\tSTWAE as string,\n\t\tAEDAT as integer,\n\t\tKVGR1 as string,\n\t\tKVGR2 as string,\n\t\tKVGR3 as string,\n\t\tKVGR4 as string,\n\t\tKVGR5 as string,\n\t\tKNUMA as string,\n\t\tKOKRS as string,\n\t\tPS_PSP_PNR as short,\n\t\tKURST as string,\n\t\tKKBER as string,\n\t\tKNKLI as string,\n\t\tGRUPP as string,\n\t\tSBGRP as string,\n\t\tCTLPC as string,\n\t\tCMWAE as string,\n\t\tCMFRE as integer,\n\t\tCMNUP as short,\n\t\tCMNGV as short,\n\t\tAMTBL as double,\n\t\tHITYP_PR as string,\n\t\tABRVW as string,\n\t\tABDIS as string,\n\t\tVGBEL as integer,\n\t\tOBJNR as string,\n\t\tBUKRS_VF as short,\n\t\tTAXK1 as boolean,\n\t\tTAXK2 as string,\n\t\tTAXK3 as string,\n\t\tTAXK4 as string,\n\t\tTAXK5 as string,\n\t\tTAXK6 as string,\n\t\tTAXK7 as string,\n\t\tTAXK8 as string,\n\t\tTAXK9 as string,\n\t\tXBLNR as integer,\n\t\tZUONR as integer,\n\t\tVGTYP as string,\n\t\tKALSM_CH as string,\n\t\tAGRZR as short,\n\t\tAUFNR as string,\n\t\tQMNUM as string,\n\t\tVBELN_GRP as string,\n\t\tSCHEME_GRP as string,\n\t\tABRUF_PART as string,\n\t\tABHOD as short,\n\t\tABHOV as short,\n\t\tABHOB as short,\n\t\tRPLNR as string,\n\t\tVZEIT as short,\n\t\tSTCEG_L as string,\n\t\tLANDTX as string,\n\t\tXEGDR as string,\n\t\tENQUEUE_GRP as string,\n\t\tDAT_FZAU as short,\n\t\tFMBDAT as short,\n\t\tVSNMR_V as string,\n\t\tHANDLE as string,\n\t\tPROLI as string,\n\t\tCONT_DG as string,\n\t\tCRM_GUID as string,\n\t\tUPD_TMSTMP as double,\n\t\tMSR_ID as short,\n\t\tTM_CTRL_KEY as string,\n\t\tOIPBL as string,\n\t\tLAST_CHANGED_BY_USER as string,\n\t\tHANDOVERLOC as string,\n\t\tEXT_BUS_SYST_ID as string,\n\t\tEXT_REF_DOC_ID as string,\n\t\tEXT_REV_TMSTMP as double,\n\t\tAPM_APPROVAL_STATUS as string,\n\t\tAPM_APPROVAL_REASON as string,\n\t\tAPM_REJECTION_REASON as string,\n\t\t{_DATAAGING} as short,\n\t\tABSTK as string,\n\t\tBESTK as string,\n\t\tCMPSC as string,\n\t\tCMPSD as string,\n\t\tCMPSI as string,\n\t\tCMPSJ as string,\n\t\tCMPSK as string,\n\t\tCMPS_CM as string,\n\t\tCMPS_TE as string,\n\t\tCMGST as string,\n\t\tCOSTA as string,\n\t\tDCSTK as string,\n\t\tFKSAK as string,\n\t\tFMSTK as string,\n\t\tFSSTK as string,\n\t\tGBSTK as string,\n\t\tLFGSK as string,\n\t\tLFSTK as string,\n\t\tLSSTK as string,\n\t\tMANEK as string,\n\t\tRFGSK as string,\n\t\tRFSTK as string,\n\t\tSPSTG as string,\n\t\tTRSTA as string,\n\t\tUVALL as string,\n\t\tUVALS as string,\n\t\tUVFAK as string,\n\t\tUVFAS as string,\n\t\tUVPRS as string,\n\t\tUVVLK as string,\n\t\tUVVLS as string,\n\t\tUVK01 as string,\n\t\tUVK02 as string,\n\t\tUVK03 as string,\n\t\tUVK04 as string,\n\t\tUVK05 as string,\n\t\tUVS01 as string,\n\t\tUVS02 as string,\n\t\tUVS03 as string,\n\t\tUVS04 as string,\n\t\tUVS05 as string,\n\t\tWBSTK as string,\n\t\tTOTAL_EMCST as string,\n\t\tTOTAL_SLCST as string,\n\t\tTOTAL_LCCST as string,\n\t\tTOTAL_PCSTA as string,\n\t\tTOTAL_DGSTA as string,\n\t\tTOTAL_SDSSTA as string,\n\t\tDP_CLEAR_STA_HDR as string,\n\t\tDUMMY_SALESDOC_INCL_EEW_PS as string,\n\t\tGLO_LOG_REF1_HD as string,\n\t\tZAPCGKH as short,\n\t\tAPCGK_EXTENDH as short,\n\t\tZABDATH as short,\n\t\tAD01FAREG as string,\n\t\tAD01BASDOC as string,\n\t\tLASTVCHR as short,\n\t\tPSM_BUDAT as short,\n\t\tFSH_KVGR6 as string,\n\t\tFSH_KVGR7 as string,\n\t\tFSH_KVGR8 as string,\n\t\tFSH_KVGR9 as string,\n\t\tFSH_KVGR10 as string,\n\t\tFSH_REREG as string,\n\t\tFSH_CQ_CHECK as string,\n\t\tFSH_VRSN_STATUS as string,\n\t\tFSH_TRANSACTION as string,\n\t\tFSH_VAS_CG as string,\n\t\tFSH_CANDATE as short,\n\t\tFSH_SS as string,\n\t\tFSH_OS_STG_CHANGE as string,\n\t\tJ_3GKBAUL as string,\n\t\tMILL_APPL_ID as string,\n\t\tTAS as string,\n\t\tBETC as string,\n\t\tMOD_ALLOW as string,\n\t\tCANCEL_ALLOW as string,\n\t\tPAY_METHOD as string,\n\t\tBPN as string,\n\t\tREP_FREQ as string,\n\t\tLOGSYSB as string,\n\t\tKALCD as string,\n\t\tMULTI as string,\n\t\tSPPAYM as string,\n\t\tWTYSC_CLM_HDR as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tmoveFiles: ['S4D/VBAK','S4D/VBAK/processed']) ~> VBAKDL\nsource(output(\n\t\tMANDT as short,\n\t\tVBELN as integer,\n\t\tPOSNR as short,\n\t\tMATNR as string,\n\t\tMATWA as string,\n\t\tPMATN as string,\n\t\tCHARG as string,\n\t\tMATKL as string,\n\t\tARKTX as string,\n\t\tPSTYV as string,\n\t\tPOSAR as string,\n\t\tLFREL as string,\n\t\tFKREL as string,\n\t\tUEPOS as short,\n\t\tGRPOS as short,\n\t\tABGRU as short,\n\t\tPRODH as string,\n\t\tPRODH_UNIV_SALES_PARNT_NODID as string,\n\t\tPRODH_UNIV_SALES_DET_ORIGIN as string,\n\t\tPRODH_UNIV_BATDET_PARNT_NODID as string,\n\t\tPRODH_UNIV_BATDET_DET_ORIGIN as string,\n\t\tZWERT as double,\n\t\tZMENG as double,\n\t\tZIEME as string,\n\t\tUMZIZ as boolean,\n\t\tUMZIN as boolean,\n\t\tMEINS as string,\n\t\tSMENG as double,\n\t\tABLFZ as double,\n\t\tABDAT as short,\n\t\tABSFZ as double,\n\t\tPOSEX as string,\n\t\tKDMAT as string,\n\t\tKBVER as boolean,\n\t\tKEVER as boolean,\n\t\tVKGRU as string,\n\t\tVKAUS as string,\n\t\tGRKOR as short,\n\t\tFMENG as string,\n\t\tUEBTK as string,\n\t\tUEBTO as double,\n\t\tUNTTO as double,\n\t\tFAKSP as string,\n\t\tATPKZ as string,\n\t\tRKFKF as string,\n\t\tSPART as short,\n\t\tGSBER as string,\n\t\tNETWR as double,\n\t\tWAERK as string,\n\t\tANTLF as boolean,\n\t\tKZTLF as string,\n\t\tCHSPL as string,\n\t\tKWMENG as double,\n\t\tLSMENG as double,\n\t\tKBMENG as double,\n\t\tKLMENG as double,\n\t\tVRKME as string,\n\t\tUMVKZ as boolean,\n\t\tUMVKN as boolean,\n\t\tBRGEW as double,\n\t\tNTGEW as double,\n\t\tGEWEI as string,\n\t\tVOLUM as double,\n\t\tVOLEH as string,\n\t\tVBELV as integer,\n\t\tPOSNV as short,\n\t\tVGBEL as integer,\n\t\tVGPOS as short,\n\t\tVOREF as string,\n\t\tUPFLU as string,\n\t\tERLRE as string,\n\t\tLPRIO as short,\n\t\tWERKS as short,\n\t\tLGORT as string,\n\t\tVSTEL as string,\n\t\tROUTE as string,\n\t\tSTKEY as string,\n\t\tSTDAT as integer,\n\t\tSTLNR as string,\n\t\tSTPOS as boolean,\n\t\tAWAHR as short,\n\t\tERDAT as date,\n\t\tERNAM as string,\n\t\tERZET as integer,\n\t\tTAXM1 as boolean,\n\t\tTAXM2 as string,\n\t\tTAXM3 as string,\n\t\tTAXM4 as string,\n\t\tTAXM5 as string,\n\t\tTAXM6 as string,\n\t\tTAXM7 as string,\n\t\tTAXM8 as string,\n\t\tTAXM9 as string,\n\t\tVBEAF as double,\n\t\tVBEAV as double,\n\t\tVGREF as string,\n\t\tNETPR as double,\n\t\tKPEIN as boolean,\n\t\tKMEIN as string,\n\t\tSHKZG as string,\n\t\tSKTOF as string,\n\t\tMTVFP as string,\n\t\tSUMBD as string,\n\t\tKONDM as string,\n\t\tKTGRM as string,\n\t\tBONUS as string,\n\t\tPROVG as string,\n\t\tEANNR as string,\n\t\tPRSOK as string,\n\t\tBWTAR as string,\n\t\tBWTEX as string,\n\t\tXCHPF as string,\n\t\tXCHAR as string,\n\t\tLFMNG as double,\n\t\tSTAFO as string,\n\t\tWAVWR as double,\n\t\tKZWI1 as double,\n\t\tKZWI2 as double,\n\t\tKZWI3 as double,\n\t\tKZWI4 as double,\n\t\tKZWI5 as double,\n\t\tKZWI6 as double,\n\t\tSTCUR as double,\n\t\tAEDAT as integer,\n\t\tEAN11 as long,\n\t\tFIXMG as string,\n\t\tPRCTR as string,\n\t\tMVGR1 as string,\n\t\tMVGR2 as string,\n\t\tMVGR3 as string,\n\t\tMVGR4 as string,\n\t\tMVGR5 as string,\n\t\tKMPMG as double,\n\t\tSUGRD as string,\n\t\tSOBKZ as string,\n\t\tVPZUO as boolean,\n\t\tPAOBJNR as short,\n\t\tPS_PSP_PNR as short,\n\t\tAUFNR as string,\n\t\tVPMAT as string,\n\t\tVPWRK as string,\n\t\tPRBME as string,\n\t\tUMREF as boolean,\n\t\tKNTTP as string,\n\t\tKZVBR as string,\n\t\tSERNR as string,\n\t\tOBJNR as string,\n\t\tABGRS as string,\n\t\tBEDAE as string,\n\t\tCMPRE as double,\n\t\tCMTFG as string,\n\t\tCMPNT as string,\n\t\tCMKUA as double,\n\t\tCUOBJ as short,\n\t\tCUOBJ_CH as short,\n\t\tCEPOK as string,\n\t\tKOUPD as string,\n\t\tSERAIL as string,\n\t\tANZSN as boolean,\n\t\tNACHL as string,\n\t\tMAGRV as string,\n\t\tMPROK as string,\n\t\tVGTYP as string,\n\t\tPROSA as string,\n\t\tUEPVW as string,\n\t\tKALNR as integer,\n\t\tKLVAR as string,\n\t\tSPOSN as string,\n\t\tKOWRR as string,\n\t\tSTADAT as short,\n\t\tEXART as string,\n\t\tPREFE as string,\n\t\tKNUMH as string,\n\t\tCLINT as short,\n\t\tCHMVS as short,\n\t\tSTLTY as string,\n\t\tSTLKN as short,\n\t\tSTPOZ as short,\n\t\tSTMAN as string,\n\t\tZSCHL_K as string,\n\t\tKALSM_K as string,\n\t\tKALVAR as string,\n\t\tKOSCH as string,\n\t\tUPMAT as string,\n\t\tUKONM as string,\n\t\tMFRGR as string,\n\t\tPLAVO as string,\n\t\tKANNR as string,\n\t\tCMPRE_FLT as double,\n\t\tABFOR as string,\n\t\tABGES as boolean,\n\t\tJ_1BCFOP as string,\n\t\tJ_1BTAXLW1 as string,\n\t\tJ_1BTAXLW2 as string,\n\t\tJ_1BTXSDC as string,\n\t\tWKTNR as string,\n\t\tWKTPS as short,\n\t\tSKOPF as string,\n\t\tKZBWS as string,\n\t\tWGRU1 as string,\n\t\tWGRU2 as string,\n\t\tKNUMA_PI as string,\n\t\tKNUMA_AG as string,\n\t\tKZFME as string,\n\t\tLSTANR as string,\n\t\tTECHS as string,\n\t\tMWSBP as double,\n\t\tBERID as short,\n\t\tPCTRF as string,\n\t\tLOGSYS_EXT as string,\n\t\tJ_1BTAXLW3 as string,\n\t\tJ_1BTAXLW4 as string,\n\t\tJ_1BTAXLW5 as string,\n\t\tSTOCKLOC as string,\n\t\tSLOCTYPE as string,\n\t\tMSR_RET_REASON as short,\n\t\tMSR_REFUND_CODE as short,\n\t\tMSR_APPROV_BLOCK as string,\n\t\tNRAB_KNUMH as string,\n\t\tTRMRISK_RELEVANT as string,\n\t\tSGT_RCAT as string,\n\t\tVBKD_POSNR as short,\n\t\tVEDA_POSNR as short,\n\t\tHANDOVERLOC as string,\n\t\tEXT_REF_ITEM_ID as string,\n\t\tHANDOVERDATE as short,\n\t\tHANDOVERTIME as short,\n\t\tTC_AUT_DET as string,\n\t\tMANUAL_TC_REASON as string,\n\t\tFISCAL_INCENTIVE as string,\n\t\tTAX_SUBJECT_ST as string,\n\t\tFISCAL_INCENTIVE_ID as string,\n\t\tSPCSTO as short,\n\t\tREVACC_REFID as string,\n\t\tREVACC_REFTYPE as string,\n\t\t{_DATAAGING} as short,\n\t\tABSTA as string,\n\t\tBESTA as string,\n\t\tCMPPI as string,\n\t\tCMPPJ as string,\n\t\tCOSTA as string,\n\t\tDCSTA as string,\n\t\tFKSAA as string,\n\t\tFSSTA as string,\n\t\tGBSTA as string,\n\t\tLFGSA as string,\n\t\tLFSTA as string,\n\t\tLSSTA as string,\n\t\tMANEK as string,\n\t\tRFGSA as string,\n\t\tRFSTA as string,\n\t\tUVALL as string,\n\t\tUVFAK as string,\n\t\tUVPRS as string,\n\t\tUVVLK as string,\n\t\tUVP01 as string,\n\t\tUVP02 as string,\n\t\tUVP03 as string,\n\t\tUVP04 as string,\n\t\tUVP05 as string,\n\t\tWBSTA as string,\n\t\tEMCST as string,\n\t\tSLCST as string,\n\t\tTOTAL_LCCST as string,\n\t\tPCSTA as string,\n\t\tDGSTA as string,\n\t\tSDSSTA as string,\n\t\tDP_CLEAR_STA_ITM as string,\n\t\tCMTD_DELIV_DATE as integer,\n\t\tCMTD_DELIV_CREADATE as integer,\n\t\tCMTD_DELIV_QTY_SU as double,\n\t\tREQQTY_BU as double,\n\t\tHANDLE as string,\n\t\tPBS_STATE as string,\n\t\tIFRS15_RELEVANCE as string,\n\t\tIFRS15_TOTAL_SSP as double,\n\t\tREVFP as string,\n\t\tCAPPED_NET_AMOUNT as double,\n\t\tCAPPED_NET_AMOUNT_ALERT_THLD as short,\n\t\tCATS_OVERTIME_CATEGORY as string,\n\t\tSESSION_CREATION_DATE as integer,\n\t\tSESSION_CREATION_TIME as integer,\n\t\tORIGINAL_PLANT as string,\n\t\tATP_ABC_SUBSTITUTION_STATUS as string,\n\t\tDUMMY_SLSDOCITEM_INCL_EEW_PS as string,\n\t\tPO_QUAN as double,\n\t\tPO_UNIT as string,\n\t\tMILL_SE_GPOSN as short,\n\t\tMILL_BATCH_SEL_F as string,\n\t\tGLO_LOG_REF1_IT as string,\n\t\tCPD_UPDAT as timestamp,\n\t\tZAPCGKI as short,\n\t\tAPCGK_EXTENDI as short,\n\t\tZABDATI as short,\n\t\tAUFPL_OLC as short,\n\t\tAPLZL_OLC as short,\n\t\tAD01PROFNR as string,\n\t\tADMOI as string,\n\t\tADICC as short,\n\t\tADPRI as string,\n\t\tADDNS as string,\n\t\tADACN as string,\n\t\tLABSG as string,\n\t\tFABSG as string,\n\t\tPR_L_L as string,\n\t\tPR_F_F as string,\n\t\tPR_F_L as string,\n\t\tFERC_IND as string,\n\t\tFSH_SEASON_YEAR as string,\n\t\tFSH_SEASON as string,\n\t\tFSH_COLLECTION as string,\n\t\tFSH_THEME as string,\n\t\tFSH_CRSD as string,\n\t\tFSH_SEAREF as string,\n\t\tFSH_CANDATE as short,\n\t\tFSH_PSM_PFM_SPLIT as string,\n\t\tFSH_VAS_REL as string,\n\t\tFSH_VAS_PRNT_ID as short,\n\t\tFSH_TRANSACTION as string,\n\t\tFSH_ITEM_GROUP as short,\n\t\tFSH_ITEM as short,\n\t\tFSH_VASREF as string,\n\t\tFSH_GRID_COND_REC as string,\n\t\tFSH_PQR_UEPOS as short,\n\t\tRFM_SCC_INDICATOR as string,\n\t\tKOSTL as string,\n\t\tFONDS as string,\n\t\tFISTL as string,\n\t\tFKBER as string,\n\t\tGRANT_NBR as string,\n\t\tBUDGET_PD as string,\n\t\tIUID_RELEVANT as string,\n\t\tEQUNR as string,\n\t\tEQART as string,\n\t\tJ_3GLVART as string,\n\t\tJ_3GDATVO as short,\n\t\tJ_3GDATBI as short,\n\t\tJ_3GBELNRI as string,\n\t\tJ_3GPOSNRI as short,\n\t\tPRS_OBJNR as string,\n\t\tPRS_SD_SPSNR as short,\n\t\tPRS_WORK_PERIOD as short,\n\t\tTAS as string,\n\t\tBETC as string,\n\t\tMOD_ALLOW as string,\n\t\tCANCEL_ALLOW as string,\n\t\tPAY_METHOD as string,\n\t\tBPN as string,\n\t\tREP_FREQ as string,\n\t\tFMFGUS_KEY as string,\n\t\tRFM_PSST_RULE as string,\n\t\tRFM_PSST_GROUP as string,\n\t\tPARGB as string,\n\t\tAUFPL_OAA as short,\n\t\tAPLZL_OAA as short,\n\t\tVLCENDCU as string,\n\t\tWRF_CHARSTC1 as string,\n\t\tWRF_CHARSTC2 as string,\n\t\tWRF_CHARSTC3 as string,\n\t\tARSNUM as short,\n\t\tARSPOS as short,\n\t\tWTYSC_CLMITEM as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tmoveFiles: ['/S4D/VBAP','S4D/VBAP/processed']) ~> VBAPDL\nVBAKDL, VBAPDL join(VBAKDL@VBELN == VBAPDL@VBELN,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> SalesData\nSalesData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MergedSalesData"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BW MDX Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BW MDX",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapBwSource",
								"query": "select {[Measures].[0D_NW_NETV], [Measures].[0D_NW_OORV]} on columns,\n   [0D_NW_CNTRY].[LEVEL01] on rows\nfrom [$0D_NW_C01]"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "BW_NPL_MDX",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLMDX",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "BW_NPL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BW OpenHub Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "OpenHub",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapOpenHubSource",
								"baseRequestId": 9879,
								"excludeLastRequest": false
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "BW_NPL_OpenHub_NW_C01",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLOpenHub",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "BW_NPL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyCOEPTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyCOEPTable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "BUZEI EQ 2 AND PERIO EQ 3",
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "PartitionOnCalendarYear",
								"partitionSettings": {
									"partitionColumnName": "GJAHR",
									"partitionUpperBound": "2019",
									"partitionLowerBound": "2016",
									"maxPartitionsNumber": 4
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "COEPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "S4DCOEPData",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractMergeSalesData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractVBAKData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "S4DVBAKTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "S4DVBAKDataLake",
								"type": "DatasetReference",
								"parameters": {
									"fileID": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ExtractVBAPData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "S4DVBAPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "S4DVBAPDataLake",
								"type": "DatasetReference",
								"parameters": {
									"fileId": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "MergeSalesDate and Write to DataLake",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ExtractVBAKData",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ExtractVBAPData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MergeVBAKandVBAP",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"VBAKDL": {
										"fileID": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"VBAPDL": {
										"fileId": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"MergedSalesData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/MergeVBAKandVBAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractMergeSalesDataDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract VBAK to DL Parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "S4DVBAKTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "S4DVBAKDLParquet",
								"type": "DatasetReference",
								"parameters": {
									"fileId": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Extract VBAP To DL Parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "S4DVBAPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "S4DVBAPDLParquet",
								"type": "DatasetReference",
								"parameters": {
									"fileId": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMaintOrderHeaders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract MaintenanceOrder Headers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapHanaSource",
								"query": "select * from \"SAPHANADB\".\"AUFK\" where \"AUTYP\"=30",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MARATableHANA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MaintenanceOrdersCsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4H"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMaraUsingHANA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract Mara Table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapHanaSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MARATableHANA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MARAcsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4H"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncrementalCopyFromSAPTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFromSAPTable",
						"description": "Copy incremental data from SAP table to AzureBlobStorage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupLastCopiedDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "@{concat(pipeline().parameters.SapTableDateColumn,' LE ',formatDateTime(adddays(pipeline().TriggerTime,-1),'yyyyMMdd'), ' AND ',pipeline().parameters.SapTableDateColumn,' GE ', formatDateTime(activity('LookupLastCopiedDate').output.firstRow.Prop_0, 'yyyyMMdd'))}",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SAPTableSource_Incremental",
								"type": "DatasetReference",
								"parameters": {
									"SapTableName": {
										"value": "@pipeline().parameters.SapTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedTextSink",
								"type": "DatasetReference",
								"parameters": {
									"DelimitedTextSinkContainer": {
										"value": "@pipeline().parameters.DelimitedTextSinkContainer",
										"type": "Expression"
									},
									"DelimitedTextSinkDirectory": {
										"value": "@pipeline().parameters.DelimitedTextSinkDirectory",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LookupLastCopiedDate",
						"description": "Copy incremental data from SAP table to AzureBlobStorage",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AzureBlobDelimitedDataset",
								"type": "DatasetReference",
								"parameters": {
									"HighWatermarkBlobDirectory": {
										"value": "@pipeline().parameters.HighWatermarkBlobDirectory",
										"type": "Expression"
									},
									"HighWatermarkBlobName": {
										"value": "@pipeline().parameters.HighWatermarkBlobName",
										"type": "Expression"
									},
									"HighWatermarkBlobContainer": {
										"value": "@pipeline().parameters.HighWatermarkBlobContainer",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "SetLastCopiedDate",
						"description": "Store the last copied date into blob by calling Logic App",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CopyFromSAPTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.LogicAppURL",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\"copiedDate\":\"@{pipeline().TriggerTime}\"",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"HighWatermarkBlobDirectory": {
						"type": "string"
					},
					"HighWatermarkBlobName": {
						"type": "string"
					},
					"HighWatermarkBlobContainer": {
						"type": "string"
					},
					"SapTableName": {
						"type": "string"
					},
					"DelimitedTextSinkContainer": {
						"type": "string"
					},
					"DelimitedTextSinkDirectory": {
						"type": "string"
					},
					"LogicAppURL": {
						"type": "string"
					},
					"SapTableDateColumn": {
						"type": "string"
					}
				},
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SAPTableSource_Incremental')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProductsTable_To_DataLake2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NPLProductsTable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "NPLProductsTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLProducts_csv_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProductsTable_To_DataLake2_Incr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NPLProductsTableIncr",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "@{concat('LASTMODIFIED GE ', formatDateTime(activity('LookupWaterMark').output.firstRow.WatermarkValue, 'yyyyMMdd'))}",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"rfcTableFields": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "NPLProductsTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLProducts_csv_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LookupWaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select * from watermarktable where TableName='NPLProductsTable';",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WaterMark_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "NPLProductsTableIncr",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "NPLProductsTable",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "bdlsqldatadb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PaymentDataFromCosmosDBDF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PaymentDataFromCosmosDB",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ExtractPaymentsFromCosmosDB",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PaymentDataCosmosDB": {},
									"PaymentDateSynapse": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"folderPath": "synapsestaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ExtractPaymentsFromCosmosDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PaymentsFromCosmosDBDF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CosmosDbToAzDL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"preferredRegions": []
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['PaymentNr']"
										},
										"sink": {
											"name": "PaymentNr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SalesOrderNr']"
										},
										"sink": {
											"name": "SalesOrderNr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CustomerNr']"
										},
										"sink": {
											"name": "CustomerNr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CustomerName']"
										},
										"sink": {
											"name": "CustomerName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['PaymentDate']"
										},
										"sink": {
											"name": "PaymentDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Value']"
										},
										"sink": {
											"name": "Value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Currency']"
										},
										"sink": {
											"name": "Currency",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CosmosS4D_Payments",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Payments_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TransformSynapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "CosmosDbToAzDL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataLakePaymentsToSynapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PaymentsAzDL": {},
									"SynapePayments": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"folderPath": "synapsestaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "S4D_MicroHack/NotUsed"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DataLakePaymentsToSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RetrieveSAPTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Retrieve Table List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ControlTable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Retrieve Table List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Retrieve Table List').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy SAP Table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "S4DTable",
											"type": "DatasetReference",
											"parameters": {
												"tableName": {
													"value": "@item().tableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "S4DDataLakeFile",
											"type": "DatasetReference",
											"parameters": {
												"dirName": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"fileName": {
													"value": "@concat(item().tableName,'_',pipeline().RunId,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4SSalesOrderHeadersToMySynapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract SalesOrderHeaders",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"path": "synapsestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BILLINGCOMPANYCODE",
											"type": "String"
										},
										"sink": {
											"name": "BILLINGCOMPANYCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILLINGDOCUMENTDATE",
											"type": "String"
										},
										"sink": {
											"name": "BILLINGDOCUMENTDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "COUNTRY",
											"type": "String"
										},
										"sink": {
											"name": "COUNTRY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONDATE"
										},
										"sink": {
											"name": "CREATIONDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONTIME",
											"type": "String"
										},
										"sink": {
											"name": "CREATIONTIME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREDITCONTROLAREA",
											"type": "String"
										},
										"sink": {
											"name": "CREDITCONTROLAREA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERACCOUNTGROUP",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMERACCOUNTGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERGROUP",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMERGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERNAME",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMERNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										},
										"sink": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATE",
											"type": "String"
										},
										"sink": {
											"name": "LASTCHANGEDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										},
										"sink": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "MANDT",
											"type": "String"
										},
										"sink": {
											"name": "MANDT",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										},
										"sink": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRICINGDATE",
											"type": "String"
										},
										"sink": {
											"name": "PRICINGDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDISTRICT",
											"type": "String"
										},
										"sink": {
											"name": "SALESDISTRICT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENT",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESGROUP",
											"type": "String"
										},
										"sink": {
											"name": "SALESGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESOFFICE",
											"type": "String"
										},
										"sink": {
											"name": "SALESOFFICE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESORGANIZATION",
											"type": "String"
										},
										"sink": {
											"name": "SALESORGANIZATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										},
										"sink": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SOLDTOPARTY",
											"type": "String"
										},
										"sink": {
											"name": "SOLDTOPARTY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TOTALNETAMOUNT",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALNETAMOUNT",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										},
										"sink": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CITYNAME",
											"type": "String"
										},
										"sink": {
											"name": "CITYNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "POSTALCODE",
											"type": "String"
										},
										"sink": {
											"name": "POSTALCODE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ZBD_ISALESDOC_E",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SynSalesOrderHeaders",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "myS4S"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZBD_ISALESDOC_E')]"
			]
		}
	]
}