{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "bdlsapdatafact"
		},
		"ADFTest_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'ADFTest'"
		},
		"AzDataLakeGen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzDataLakeGen2'"
		},
		"Cosmos_SAPS4D_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Cosmos_SAPS4D'"
		},
		"NPLABAPSystem_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'NPLABAPSystem'"
		},
		"NPLTable_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'NPLTable'"
		},
		"NPL_BWMDX_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'NPL_BWMDX'"
		},
		"NPL_BWOpenHub_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'NPL_BWOpenHub'"
		},
		"ODPFunction_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'ODPFunction'"
		},
		"S4DCLNT100_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'S4DCLNT100'"
		},
		"S4DCLNT100OData_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'S4DCLNT100OData'"
		},
		"S4HHANA_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'S4HHANA'"
		},
		"S4HOData_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'S4HOData'"
		},
		"S4HRest_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'S4HRest'"
		},
		"S4H_ODP_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'S4H_ODP'"
		},
		"S4SGBBDemoTableCon_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'S4SGBBDemoTableCon'"
		},
		"SAPDataLake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'SAPDataLake'"
		},
		"SAPDevCenter_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SAPDevCenter'"
		},
		"SAPoData_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SAPoData'"
		},
		"adfdatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'adfdatabricks'"
		},
		"bdlSynapsAnalytics_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'bdlSynapsAnalytics'"
		},
		"bdldftutorial_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'bdldftutorial'"
		},
		"bdlsqldatadb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'bdlsqldatadb'"
		},
		"myGBBDemoTableCon_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'myGBBDemoTableCon'"
		},
		"myMicroHackCosmosDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'myMicroHackCosmosDB'"
		},
		"AzureDataLakeStore_NWCustomers_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "Customers.csv"
		},
		"AzureDataLakeStore_NWCustomers_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "NorthWind"
		},
		"BDL_AzDL_NPLProducts_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "Products.csv"
		},
		"BDL_AzDL_NPLProducts_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "SAP/NPL"
		},
		"BdlAzDL_SAPDev_ProductSet_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "DevCenterProdSet.csv"
		},
		"BdlAzDL_SAPDev_ProductSet_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "SAP/DevCenter"
		},
		"DailyGameData_Blob_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().dsFileName"
		},
		"DailyGameData_Blob_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "adftutorial/gamedata/2016/test"
		},
		"Persons_Incremental_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@concat('Incremental-', pipeline().RunId, '.txt')"
		},
		"Persons_Incremental_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "adftutorial/persons"
		},
		"ADFTest_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://bdladf.azurewebsites.net"
		},
		"AzDataLakeGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azdatalakegen2bdl.dfs.core.windows.net"
		},
		"BdlAzDataLake_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://bldazdatalakeadls.azuredatalakestore.net/webhdfs/v1"
		},
		"BdlAzDataLake_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"BdlAzDataLake_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "37d02782-ca89-46c0-abac-ef2c0ae81726"
		},
		"BdlAzDataLake_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "bdl_azdatalake"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sandbox.api.sap.com/s4hanacloud/sap/opu/odata/sap/API_PRODUCTGROUP_SRV/A_ProductGroup?%24top=10"
		},
		"NPLABAPSystem_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://137.117.134.161:8000/sap/opu/odata/sap/EPM_REF_APPS_PROD_MAN_SRV/"
		},
		"NPLABAPSystem_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "DEVELOPER"
		},
		"NPLTable_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "001"
		},
		"NPLTable_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ADFUSER"
		},
		"NPLTable_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "10.6.1.6"
		},
		"NPLTable_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"NPL_BWMDX_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "137.117.134.161"
		},
		"NPL_BWMDX_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"NPL_BWMDX_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "001"
		},
		"NPL_BWMDX_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "MDXUSER"
		},
		"NPL_BWOpenHub_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "001"
		},
		"NPL_BWOpenHub_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "OPENHUB"
		},
		"NPL_BWOpenHub_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "137.117.134.161"
		},
		"NPL_BWOpenHub_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"ODPFunction_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://odpfunctions.azurewebsites.net"
		},
		"OData1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sandbox.api.sap.com/s4hanacloud/sap/opu/odata/sap/API_PRODUCTGROUP_SRV/"
		},
		"S4DCLNT100_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "100"
		},
		"S4DCLNT100_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ADFUSER"
		},
		"S4DCLNT100_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "52.183.47.112"
		},
		"S4DCLNT100_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "40"
		},
		"S4DCLNT100OData_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://52.183.47.112:54000/sap/opu/odata/sap/sd_f1814_so_fs_srv/"
		},
		"S4DCLNT100OData_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "S4D_ODATA"
		},
		"S4HOData_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://52.142.212.18:50000/sap/opu/odata/SAP/ZBDL_ODP_ODATA_SRV"
		},
		"S4HOData_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "DEVELOPER"
		},
		"S4HRest_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://52.142.212.18:50000/sap/opu/odata/SAP/ZBDL_ODP_ODATA_SRV"
		},
		"S4HRest_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "DEVELOPER"
		},
		"S4H_ODP_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://40.68.1.228:50000/sap/opu/odata/SAP/ZBD_ISALESDOC_1_SRV"
		},
		"S4H_ODP_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "Developer"
		},
		"S4SGBBDemoTableCon_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "100"
		},
		"S4SGBBDemoTableCon_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "DEVELOPER"
		},
		"S4SGBBDemoTableCon_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "51.143.115.209"
		},
		"S4SGBBDemoTableCon_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "40"
		},
		"SAPDataLake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sapdatalake.dfs.core.windows.net"
		},
		"SAPDevCenter_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sapes5.sapdevcenter.com/sap/opu/odata/IWBEP/GWSAMPLE_BASIC/"
		},
		"SAPDevCenter_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "P2000006001"
		},
		"SAPoData_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sapes5.sapdevcenter.com/sap/opu/odata/IWBEP/GWSAMPLE_BASIC/ProductSet/"
		},
		"SAPoData_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": " P2000006001"
		},
		"SampleOData_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://services.odata.org/V3/Northwind/Northwind.svc/"
		},
		"myGBBDemoTableCon_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "100"
		},
		"myGBBDemoTableCon_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ADFUSER"
		},
		"myGBBDemoTableCon_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "20.71.235.137"
		},
		"myGBBDemoTableCon_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "40"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADFPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MergeDeltaProducts",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/badelang@microsoft.com/ADFMerge"
						},
						"linkedServiceName": {
							"referenceName": "adfdatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfdatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BW MDX Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BW MDX",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapBwSource",
								"query": "select {[Measures].[0D_NW_NETV], [Measures].[0D_NW_OORV]} on columns,\n   [0D_NW_CNTRY].[LEVEL01] on rows\nfrom [$0D_NW_C01]"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "BW_NPL_MDX",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLMDX",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "BW_NPL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BW_NPL_MDX')]",
				"[concat(variables('factoryId'), '/datasets/AzDataLakeGen2_NPLMDX')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BW OpenHub Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "OpenHub",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapOpenHubSource",
								"baseRequestId": 9879,
								"excludeLastRequest": false
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "BW_NPL_OpenHub_NW_C01",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLOpenHub",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "BW_NPL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BW_NPL_OpenHub_NW_C01')]",
				"[concat(variables('factoryId'), '/datasets/AzDataLakeGen2_NPLOpenHub')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyCOEPTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyCOEPTable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "BUZEI EQ 2 AND PERIO EQ 3",
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "PartitionOnCalendarYear",
								"partitionSettings": {
									"partitionColumnName": "GJAHR",
									"partitionUpperBound": "2019",
									"partitionLowerBound": "2016",
									"maxPartitionsNumber": 4
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "COEPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "S4DCOEPData",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/COEPTable')]",
				"[concat(variables('factoryId'), '/datasets/S4DCOEPData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDailyGameData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyGameDataBlob_to_SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": false
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Player": "player",
									"Time": "time",
									"Points": "points"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DailyGameData_Blob",
								"type": "DatasetReference",
								"parameters": {
									"dsFileName": {
										"value": "@pipeline().parameters.bdlPipeLineFileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "GameData_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"bdlPipeLineFileName": {
						"type": "String",
						"defaultValue": "test.csv"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DailyGameData_Blob')]",
				"[concat(variables('factoryId'), '/datasets/GameData_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ES5SalesOrderSet_to_AzDL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract SalesOrderSet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource",
								"httpRequestTimeout": "00:05:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ES5SalesOrderSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BdlAzDL_ES5SalesOrderSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ES5"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ES5SalesOrderSet')]",
				"[concat(variables('factoryId'), '/datasets/BdlAzDL_ES5SalesOrderSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractVBAKData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractVBAKData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "VBAKTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "S4DVBAKDataLake",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VBAKTable')]",
				"[concat(variables('factoryId'), '/datasets/S4DVBAKDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMaintOrderHeaders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract MaintenanceOrder Headers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapHanaSource",
								"query": "select * from \"SAPHANADB\".\"AUFK\" where \"AUTYP\"=30",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MARATableHANA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MaintenanceOrdersCsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4H"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MARATableHANA')]",
				"[concat(variables('factoryId'), '/datasets/MaintenanceOrdersCsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMaraUsingHANA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract Mara Table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapHanaSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MARATableHANA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MARAcsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4H"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MARATableHANA')]",
				"[concat(variables('factoryId'), '/datasets/MARAcsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetS4HSalesOrders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSalesOrders",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[spOverwriteS4HSO]",
								"sqlWriterTableType": "S4HSalesOrder",
								"storedProcedureTableTypeParameterName": "SalesOrders",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SALESDOCUMENT",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										},
										"sink": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "CREATIONDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CREATIONTIME",
											"type": "TimeSpan"
										},
										"sink": {
											"name": "CREATIONTIME",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "LASTCHANGEDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										},
										"sink": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "SALESORGANIZATION",
											"type": "String"
										},
										"sink": {
											"name": "SALESORGANIZATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										},
										"sink": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										},
										"sink": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESGROUP",
											"type": "String"
										},
										"sink": {
											"name": "SALESGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESOFFICE",
											"type": "String"
										},
										"sink": {
											"name": "SALESOFFICE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										},
										"sink": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRICINGDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "PRICINGDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "RETAILPROMOTION",
											"type": "String"
										},
										"sink": {
											"name": "RETAILPROMOTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTCONDITION",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTCONDITION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ODQ_CHANGEMODE",
											"type": "String"
										},
										"sink": {
											"name": "ODQ_CHANGEMODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ODQ_ENTITYCNTR",
											"type": "Decimal"
										},
										"sink": {
											"name": "ODQ_ENTITYCNTR",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "S4H_SalesOrders",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "S4H_SalesOrdersSQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4H"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/S4H_SalesOrders')]",
				"[concat(variables('factoryId'), '/datasets/S4H_SalesOrdersSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetS4HSalesOrders_Delta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Updated SalesOrders",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get DeltaToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[spOverwriteS4HSO]",
								"sqlWriterTableType": "S4HSalesOrder",
								"storedProcedureTableTypeParameterName": "SalesOrders",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SALESDOCUMENT",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										},
										"sink": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "CREATIONDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CREATIONTIME",
											"type": "TimeSpan"
										},
										"sink": {
											"name": "CREATIONTIME",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "LASTCHANGEDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										},
										"sink": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "SALESORGANIZATION",
											"type": "String"
										},
										"sink": {
											"name": "SALESORGANIZATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										},
										"sink": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										},
										"sink": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESGROUP",
											"type": "String"
										},
										"sink": {
											"name": "SALESGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESOFFICE",
											"type": "String"
										},
										"sink": {
											"name": "SALESOFFICE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										},
										"sink": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRICINGDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "PRICINGDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "RETAILPROMOTION",
											"type": "String"
										},
										"sink": {
											"name": "RETAILPROMOTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTCONDITION",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTCONDITION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ODQ_CHANGEMODE",
											"type": "String"
										},
										"sink": {
											"name": "ODQ_CHANGEMODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ODQ_ENTITYCNTR",
											"type": "Decimal"
										},
										"sink": {
											"name": "ODQ_ENTITYCNTR",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "S4H_SalesOrderByToken",
								"type": "DatasetReference",
								"parameters": {
									"Token": "@activity('Get DeltaToken').output.DeltaToken"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "S4H_SalesOrdersSQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get DeltaToken",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "GetODPDeltaToken",
							"method": "GET",
							"headers": {},
							"body": {
								"name": "Azure Function Call"
							}
						},
						"linkedServiceName": {
							"referenceName": "ODPFunction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "S4H"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/S4H_SalesOrderByToken')]",
				"[concat(variables('factoryId'), '/datasets/S4H_SalesOrdersSQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ODPFunction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncrementalCopyFromSAPTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFromSAPTable",
						"description": "Copy incremental data from SAP table to AzureBlobStorage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupLastCopiedDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "@{concat(pipeline().parameters.SapTableDateColumn,' LE ',formatDateTime(adddays(pipeline().TriggerTime,-1),'yyyyMMdd'), ' AND ',pipeline().parameters.SapTableDateColumn,' GE ', formatDateTime(activity('LookupLastCopiedDate').output.firstRow.Prop_0, 'yyyyMMdd'))}",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SAPTableSource_Incremental",
								"type": "DatasetReference",
								"parameters": {
									"SapTableName": {
										"value": "@pipeline().parameters.SapTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedTextSink",
								"type": "DatasetReference",
								"parameters": {
									"DelimitedTextSinkContainer": {
										"value": "@pipeline().parameters.DelimitedTextSinkContainer",
										"type": "Expression"
									},
									"DelimitedTextSinkDirectory": {
										"value": "@pipeline().parameters.DelimitedTextSinkDirectory",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LookupLastCopiedDate",
						"description": "Copy incremental data from SAP table to AzureBlobStorage",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AzureBlobDelimitedDataset",
								"type": "DatasetReference",
								"parameters": {
									"HighWatermarkBlobDirectory": {
										"value": "@pipeline().parameters.HighWatermarkBlobDirectory",
										"type": "Expression"
									},
									"HighWatermarkBlobName": {
										"value": "@pipeline().parameters.HighWatermarkBlobName",
										"type": "Expression"
									},
									"HighWatermarkBlobContainer": {
										"value": "@pipeline().parameters.HighWatermarkBlobContainer",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "SetLastCopiedDate",
						"description": "Store the last copied date into blob by calling Logic App",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CopyFromSAPTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.LogicAppURL",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\"copiedDate\":\"@{pipeline().TriggerTime}\"",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"HighWatermarkBlobDirectory": {
						"type": "string"
					},
					"HighWatermarkBlobName": {
						"type": "string"
					},
					"HighWatermarkBlobContainer": {
						"type": "string"
					},
					"SapTableName": {
						"type": "string"
					},
					"DelimitedTextSinkContainer": {
						"type": "string"
					},
					"DelimitedTextSinkDirectory": {
						"type": "string"
					},
					"LogicAppURL": {
						"type": "string"
					},
					"SapTableDateColumn": {
						"type": "string"
					}
				},
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SAPTableSource_Incremental')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedTextSink')]",
				"[concat(variables('factoryId'), '/datasets/AzureBlobDelimitedDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncrementalPersons')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupOldWatermarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select * from watermarktable where TableName = 'persons';",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WaterMark_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LookupNewWaterMarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select MAX(LastModifytime) as NewWatermarkvalue from persons",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Persons_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IncrementalCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupNewWaterMarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupOldWatermarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from persons where LastModifytime > '@{activity('LookupOldWatermarkActivity').output.firstrow.watermarkvalue}' and LastModifytime <= '@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}';",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Persons_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Persons_Incremental",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "StoredProceduretoWriteWatermarkActivity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IncrementalCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": {
										"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.TableName}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "bdlsqldatadb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WaterMark_SQL')]",
				"[concat(variables('factoryId'), '/datasets/Persons_SQL')]",
				"[concat(variables('factoryId'), '/datasets/Persons_Incremental')]",
				"[concat(variables('factoryId'), '/linkedServices/bdlsqldatadb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProductsTable_To_DataLake2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NPLProductsTable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "NPLProductsTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLProducts_csv_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/NPLProductsTable')]",
				"[concat(variables('factoryId'), '/datasets/AzDataLakeGen2_NPLProducts_csv_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProductsTable_To_DataLake2_Incr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NPLProductsTableIncr",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "@{concat('LASTMODIFIED GE ', formatDateTime(activity('LookupWaterMark').output.firstRow.WatermarkValue, 'yyyyMMdd'))}",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"rfcTableFields": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "NPLProductsTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLProducts_csv_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LookupWaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select * from watermarktable where TableName='NPLProductsTable';",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WaterMark_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "NPLProductsTableIncr",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "NPLProductsTable",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "bdlsqldatadb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/NPLProductsTable')]",
				"[concat(variables('factoryId'), '/datasets/AzDataLakeGen2_NPLProducts_csv_Table')]",
				"[concat(variables('factoryId'), '/datasets/WaterMark_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/bdlsqldatadb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProducts_Incremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupWaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select * from watermarktable where TableName='NPLProducts';",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WaterMark_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IncrementalCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource",
								"query": {
									"value": "$filter=LastModified%20gt%20datetime%27@{activity('LookupWaterMark').output.firstRow.WaterMarkValue}%27",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"sqlWriterStoredProcedureName": "[[dbo].[spOverwriteProducts]",
								"sqlWriterTableType": "NPLProductsType",
								"storedProcedureTableTypeParameterName": "Products"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Id": "id",
									"CurrencyCode": "currencycode",
									"StockQuantity": "stockquantity",
									"Name": "name",
									"Description": "description",
									"SubCategoryId": "subcategoryid",
									"SubCategoryName": "subcategoryname",
									"MainCategoryId": "maincategoryid",
									"MainCategoryName": "maincategoryname",
									"SupplierId": "supplierid",
									"SupplierName": "suppliername",
									"LastModified": "lastmodified",
									"Price": "price",
									"QuantityUnit": "quantityunit",
									"MeasureUnit": "measureunit"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "NPL_Products",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NPLProducts_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "UpdateWaterMark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IncrementalCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "NPLProducts",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "bdlsqldatadb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WaterMark_SQL')]",
				"[concat(variables('factoryId'), '/datasets/NPL_Products')]",
				"[concat(variables('factoryId'), '/datasets/NPLProducts_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/bdlsqldatadb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProducts_To_DataLake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NPLProducts_To_DataLake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource"
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "NPL_Products",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BDL_AzDL_NPLProducts",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/NPL_Products')]",
				"[concat(variables('factoryId'), '/datasets/BDL_AzDL_NPLProducts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProducts_To_DataLake2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NPLProducts_To_DataLake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "NPL_Products",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLProducts_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/NPL_Products')]",
				"[concat(variables('factoryId'), '/datasets/AzDataLakeGen2_NPLProducts_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProducts_To_DataLake2_Incr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Get Product Deltas based on LastModified dates",
				"activities": [
					{
						"name": "Incremental NPLProducts_To_DataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource",
								"query": {
									"value": "$filter=LastModified%20gt%20datetime%27@{activity('LookupWaterMark').output.firstRow.WaterMarkValue}%27",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "NPL_Products",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLProducts_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LookupWaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from watermarktable where TableName='NPLProductsDL';",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WaterMark_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Incremental NPLProducts_To_DataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "NPLProductsDL",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "bdlsqldatadb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/NPL_Products')]",
				"[concat(variables('factoryId'), '/datasets/AzDataLakeGen2_NPLProducts_csv')]",
				"[concat(variables('factoryId'), '/datasets/WaterMark_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/bdlsqldatadb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProducts_To_DataLake2_Incr_Complete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Get Product Deltas based on LastModified dates",
				"activities": [
					{
						"name": "Incremental NPLProducts_To_DataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource",
								"query": {
									"value": "$filter=LastModified%20gt%20datetime%27@{activity('LookupWaterMark').output.firstRow.WaterMarkValue}%27",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "NPL_Products",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLProducts_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LookupWaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from watermarktable where TableName='NPLProductsDL';",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WaterMark_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Incremental NPLProducts_To_DataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "NPLProductsDL",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "bdlsqldatadb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "MergeUpdates",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update Watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/badelang@microsoft.com/ADFMerge"
						},
						"linkedServiceName": {
							"referenceName": "adfdatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/NPL_Products')]",
				"[concat(variables('factoryId'), '/datasets/AzDataLakeGen2_NPLProducts_csv')]",
				"[concat(variables('factoryId'), '/datasets/WaterMark_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/bdlsqldatadb')]",
				"[concat(variables('factoryId'), '/linkedServices/adfdatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProducts_To_DataLake2_json')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NPLProducts_To_DataLake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "setOfObjects"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "NPL_Products",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen2_NPLProducts_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/NPL_Products')]",
				"[concat(variables('factoryId'), '/datasets/AzDataLakeGen2_NPLProducts_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProducts_To_DataLake2_par')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Usage of Parquet format in Sink",
				"activities": [
					{
						"name": "NPLProducts_To_DataLake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "NPL_Products",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzDataLakeGen_NPLProducts_parq",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/NPL_Products')]",
				"[concat(variables('factoryId'), '/datasets/AzDataLakeGen_NPLProducts_parq')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProducts_To_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NPLProducts_To_SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Id": "id",
									"CurrencyCode": "currencycode",
									"StockQuantity": "stockquantity",
									"Name": "name",
									"Description": "description",
									"SubCategoryId": "subcategoryid",
									"SubCategoryName": "subcategoryname",
									"MainCategoryId": "maincategoryid",
									"MainCategoryName": "maincategoryname",
									"SupplierId": "supplierid",
									"SupplierName": "suppliername",
									"LastModified": "lastmodified",
									"Price": "price",
									"QuantityUnit": "quantityunit",
									"MeasureUnit": "measureunit"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "NPL_Products",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NPLProducts_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "NPLProducts"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/NPL_Products')]",
				"[concat(variables('factoryId'), '/datasets/NPLProducts_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NorthwindCust_BdlAzDL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NWCustomer_To_AzDLFile",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RelationalSource"
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "NorthWind_Customers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureDataLakeStore_NWCustomers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "NorthWind"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/NorthWind_Customers')]",
				"[concat(variables('factoryId'), '/datasets/AzureDataLakeStore_NWCustomers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PaymentDataFromCosmosDBDF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PaymentDataFromCosmosDB",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ExtractPaymentsFromCosmosDB",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PaymentDataCosmosDB": {},
									"PaymentDateSynapse": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"folderPath": "synapsestaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ExtractPaymentsFromCosmosDB')]",
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PaymentsFromCosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PaymentsFromCosmosDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"preferredRegions": []
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"path": "synapsestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['PaymentNr']"
										},
										"sink": {
											"name": "PaymentNr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SalesOrderNr']"
										},
										"sink": {
											"name": "SalesOrderNr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CustomerNr']"
										},
										"sink": {
											"name": "CustomerNr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CustomerName']"
										},
										"sink": {
											"name": "CustomerName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['PaymentDate']"
										},
										"sink": {
											"name": "PaymentDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Value']"
										},
										"sink": {
											"name": "PaymentValue",
											"type": "Decimal"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "CosmosS4D_Payments",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SynPaymentsS4D",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CosmosS4D_Payments')]",
				"[concat(variables('factoryId'), '/datasets/SynPaymentsS4D')]",
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PaymentsFromCosmosDBDF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CosmosDbToAzDL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"preferredRegions": []
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['PaymentNr']"
										},
										"sink": {
											"name": "PaymentNr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SalesOrderNr']"
										},
										"sink": {
											"name": "SalesOrderNr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CustomerNr']"
										},
										"sink": {
											"name": "CustomerNr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CustomerName']"
										},
										"sink": {
											"name": "CustomerName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['PaymentDate']"
										},
										"sink": {
											"name": "PaymentDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Value']"
										},
										"sink": {
											"name": "Value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Currency']"
										},
										"sink": {
											"name": "Currency",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CosmosS4D_Payments",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Payments_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TransformSynapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "CosmosDbToAzDL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataLakePaymentsToSynapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PaymentsAzDL": {},
									"SynapePayments": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"folderPath": "synapsestaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "S4D_MicroHack/NotUsed"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CosmosS4D_Payments')]",
				"[concat(variables('factoryId'), '/datasets/Payments_csv')]",
				"[concat(variables('factoryId'), '/dataflows/DataLakePaymentsToSynapse')]",
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PaymentsToAzDL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyPaymentsToDLCSV",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"preferredRegions": []
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['PaymentNr']"
										},
										"sink": {
											"name": "PaymentNr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SalesOrderNr']"
										},
										"sink": {
											"name": "SalesOrderNr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CustomerNr']"
										},
										"sink": {
											"name": "CustomerNr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CustomerName']"
										},
										"sink": {
											"name": "CustomerName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['PaymentDate']"
										},
										"sink": {
											"name": "PaymentDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Value']"
										},
										"sink": {
											"name": "Value",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CosmosS4D_Payments",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Payments_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CosmosS4D_Payments')]",
				"[concat(variables('factoryId'), '/datasets/Payments_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4HRest_GetUpdatedSalesOrders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetUpdatedSO_Rest",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[spOverwriteS4HSOStr]",
								"sqlWriterTableType": "S4HSalesOrderStr",
								"storedProcedureTableTypeParameterName": "SalesOrders"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "d.results[0].SALESDOCUMENT"
										},
										"sink": {
											"name": "SALESDOCUMENT",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].SDDOCUMENTCATEGORY"
										},
										"sink": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].SALESDOCUMENTTYPE"
										},
										"sink": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].SALESDOCUMENTPROCESSINGTYPE"
										},
										"sink": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].CREATIONDATE"
										},
										"sink": {
											"name": "CREATIONDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].CREATIONTIME"
										},
										"sink": {
											"name": "CREATIONTIME",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].LASTCHANGEDATE"
										},
										"sink": {
											"name": "LASTCHANGEDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].LASTCHANGEDATETIME"
										},
										"sink": {
											"name": "LASTCHANGEDATETIME",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].SALESORGANIZATION"
										},
										"sink": {
											"name": "SALESORGANIZATION",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].DISTRIBUTIONCHANNEL"
										},
										"sink": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].ORGANIZATIONDIVISION"
										},
										"sink": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].SALESGROUP"
										},
										"sink": {
											"name": "SALESGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].SALESOFFICE"
										},
										"sink": {
											"name": "SALESOFFICE",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].PURCHASEORDERBYCUSTOMER"
										},
										"sink": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].TRANSACTIONCURRENCY"
										},
										"sink": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].PRICINGDATE"
										},
										"sink": {
											"name": "PRICINGDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].RETAILPROMOTION"
										},
										"sink": {
											"name": "RETAILPROMOTION",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].SALESDOCUMENTCONDITION"
										},
										"sink": {
											"name": "SALESDOCUMENTCONDITION",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].ODQ_CHANGEMODE"
										},
										"sink": {
											"name": "ODQ_CHANGEMODE",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "d.results[0].ODQ_ENTITYCNTR"
										},
										"sink": {
											"name": "ODQ_ENTITYCNTR",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "S4HRest_GetUpdatedSO",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "S4H_SalesOrdersSQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetNextDeltaToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://52.142.196.143:50000/sap/opu/odata/SAP/ZBD_ODP_ODATA_SRV/DeltaLinksOfAttrOfZBD_ISALESDOC_1('D20190828122610_000029000')/ChangesAfter?$format=json",
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "Basic",
								"username": "DEVELOPER",
								"password": {
									"type": "SecureString",
									"value": "**********"
								}
							}
						}
					}
				],
				"folder": {
					"name": "S4H"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/S4HRest_GetUpdatedSO')]",
				"[concat(variables('factoryId'), '/datasets/S4H_SalesOrdersSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4HSO_To_DataLake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "S4HSO_DataLake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SALESDOCUMENT",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										},
										"sink": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "CREATIONDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONTIME",
											"type": "TimeSpan"
										},
										"sink": {
											"name": "CREATIONTIME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "LASTCHANGEDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										},
										"sink": {
											"name": "LASTCHANGEDATETIME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESORGANIZATION",
											"type": "String"
										},
										"sink": {
											"name": "SALESORGANIZATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										},
										"sink": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										},
										"sink": {
											"name": "ORAGANIZATIONDIVISION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESGROUP",
											"type": "String"
										},
										"sink": {
											"name": "SALESGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESOFFICE",
											"type": "String"
										},
										"sink": {
											"name": "SALESOFFICE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										},
										"sink": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRICINGDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "PRICINGDATA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RETAILPROMOTION",
											"type": "String"
										},
										"sink": {
											"name": "RETAILPROMOTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTCONDITION",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTCONDITION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ODQ_CHANGEMODE",
											"type": "String"
										},
										"sink": {
											"name": "ODQ_CHANGEMODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ODQ_ENTITYCNTR",
											"type": "Decimal"
										},
										"sink": {
											"name": "ODQ_ENTITYCNTR",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "S4H_SalesOrders",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "S4HSO_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4H"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/S4H_SalesOrders')]",
				"[concat(variables('factoryId'), '/datasets/S4HSO_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4HSalesOrderItemsToSynapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "S4DSalesOrderItemsToSynapse",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource",
								"httpRequestTimeout": "00:05:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"path": "synapsestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesOrder",
											"type": "String"
										},
										"sink": {
											"name": "SalesOrder",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SalesOrderItem",
											"type": "String"
										},
										"sink": {
											"name": "SalesOrderItem",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SalesOrderItemText",
											"type": "String"
										},
										"sink": {
											"name": "SalesOrderItemText",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SoldToParty",
											"type": "String"
										},
										"sink": {
											"name": "SoldToParty",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MaterialByCustomer",
											"type": "String"
										},
										"sink": {
											"name": "MaterialByCustomer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MaterialName",
											"type": "String"
										},
										"sink": {
											"name": "MaterialName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Material",
											"type": "String"
										},
										"sink": {
											"name": "Material",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ShipToParty",
											"type": "String"
										},
										"sink": {
											"name": "ShipToParty",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FullName",
											"type": "String"
										},
										"sink": {
											"name": "FullName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SDProcessStatus",
											"type": "String"
										},
										"sink": {
											"name": "SDProcessStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DeliveryStatus",
											"type": "String"
										},
										"sink": {
											"name": "DeliveryStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SDDocumentRejectionStatus",
											"type": "String"
										},
										"sink": {
											"name": "SDDocumentRejectionStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SalesDocumentRjcnReason",
											"type": "String"
										},
										"sink": {
											"name": "SalesDocumentRjcnReason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RequestedQuantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "RequestedQuantity",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "RequestedQuantityUnit",
											"type": "String"
										},
										"sink": {
											"name": "RequestedQuantityUnit",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TransactionCurrency",
											"type": "String"
										},
										"sink": {
											"name": "TransactionCurrency",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NetAmount",
											"type": "Decimal"
										},
										"sink": {
											"name": "NetAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "MaterialGroup",
											"type": "String"
										},
										"sink": {
											"name": "MaterialGroup",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Batch",
											"type": "String"
										},
										"sink": {
											"name": "Batch",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProductionPlant",
											"type": "String"
										},
										"sink": {
											"name": "ProductionPlant",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StorageLocation",
											"type": "String"
										},
										"sink": {
											"name": "StorageLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ShippingPointName",
											"type": "String"
										},
										"sink": {
											"name": "ShippingPointName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ShippingPoint",
											"type": "String"
										},
										"sink": {
											"name": "ShippingPoint",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SalesOrderItemCategory",
											"type": "String"
										},
										"sink": {
											"name": "SalesOrderItemCategory",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BillingBlockCriticality",
											"type": "Int16"
										},
										"sink": {
											"name": "BillingBlockCriticality",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "ItemBillingBlockReason",
											"type": "String"
										},
										"sink": {
											"name": "ItemBillingBlockReason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OrderRelatedBillingStatus",
											"type": "String"
										},
										"sink": {
											"name": "OrderRelatedBillingStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RequestedDeliveryDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "RequestedDeliveryDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "HigherLevelItem",
											"type": "String"
										},
										"sink": {
											"name": "HigherLevelItem",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SalesOrderProcessingType",
											"type": "String"
										},
										"sink": {
											"name": "SalesOrderProcessingType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RequirementSegment",
											"type": "String"
										},
										"sink": {
											"name": "RequirementSegment",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "S4DSalesOrderItems",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SynS4DSalesOrderItems",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/S4DSalesOrderItems')]",
				"[concat(variables('factoryId'), '/datasets/SynS4DSalesOrderItems')]",
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4SSalesOrderHeadersToMySynapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract SalesOrderHeaders",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"path": "synapsestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BILLINGCOMPANYCODE",
											"type": "String"
										},
										"sink": {
											"name": "BILLINGCOMPANYCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILLINGDOCUMENTDATE",
											"type": "String"
										},
										"sink": {
											"name": "BILLINGDOCUMENTDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "COUNTRY",
											"type": "String"
										},
										"sink": {
											"name": "COUNTRY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONDATE"
										},
										"sink": {
											"name": "CREATIONDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONTIME",
											"type": "String"
										},
										"sink": {
											"name": "CREATIONTIME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREDITCONTROLAREA",
											"type": "String"
										},
										"sink": {
											"name": "CREDITCONTROLAREA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERACCOUNTGROUP",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMERACCOUNTGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERGROUP",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMERGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERNAME",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMERNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										},
										"sink": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATE",
											"type": "String"
										},
										"sink": {
											"name": "LASTCHANGEDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										},
										"sink": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "MANDT",
											"type": "String"
										},
										"sink": {
											"name": "MANDT",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										},
										"sink": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRICINGDATE",
											"type": "String"
										},
										"sink": {
											"name": "PRICINGDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDISTRICT",
											"type": "String"
										},
										"sink": {
											"name": "SALESDISTRICT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENT",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESGROUP",
											"type": "String"
										},
										"sink": {
											"name": "SALESGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESOFFICE",
											"type": "String"
										},
										"sink": {
											"name": "SALESOFFICE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESORGANIZATION",
											"type": "String"
										},
										"sink": {
											"name": "SALESORGANIZATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										},
										"sink": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SOLDTOPARTY",
											"type": "String"
										},
										"sink": {
											"name": "SOLDTOPARTY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TOTALNETAMOUNT",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALNETAMOUNT",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										},
										"sink": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CITYNAME",
											"type": "String"
										},
										"sink": {
											"name": "CITYNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "POSTALCODE",
											"type": "String"
										},
										"sink": {
											"name": "POSTALCODE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ZBD_ISALESDOC_E",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SynSalesOrderHeaders",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "myS4S"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZBD_ISALESDOC_E')]",
				"[concat(variables('factoryId'), '/datasets/SynSalesOrderHeaders')]",
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPDevCenterProdSet_BdlAzDL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ProductSet_SAPDev_BdlAzDL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapEccSource"
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SAPDevCenter_ProductSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BdlAzDL_SAPDev_ProductSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ES5"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SAPDevCenter_ProductSet')]",
				"[concat(variables('factoryId'), '/datasets/BdlAzDL_SAPDev_ProductSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesOrderHeadersFromS4D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SalesOdersHeadersfromS4D",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None",
								"convertDateToDatetime": true,
								"convertTimeToTimespan": true
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"path": "synapsestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BILLINGCOMPANYCODE",
											"type": "String"
										},
										"sink": {
											"name": "BILLINGCOMPANYCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILLINGDOCUMENTDATE",
											"type": "String"
										},
										"sink": {
											"name": "BILLINGDOCUMENTDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "COUNTRY",
											"type": "String"
										},
										"sink": {
											"name": "COUNTRY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONDATE",
											"type": "String"
										},
										"sink": {
											"name": "CREATIONDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CREATIONTIME",
											"type": "String"
										},
										"sink": {
											"name": "CREATIONTIME",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "CREDITCONTROLAREA",
											"type": "String"
										},
										"sink": {
											"name": "CREDITCONTROLAREA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERACCOUNTGROUP",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMERACCOUNTGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERGROUP",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMERGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERNAME",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMERNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										},
										"sink": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATE",
											"type": "String"
										},
										"sink": {
											"name": "LASTCHANGEDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										},
										"sink": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "MANDT",
											"type": "String"
										},
										"sink": {
											"name": "MANDT",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										},
										"sink": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRICINGDATE",
											"type": "String"
										},
										"sink": {
											"name": "PRICINGDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDISTRICT",
											"type": "String"
										},
										"sink": {
											"name": "SALESDISTRICT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENT",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESGROUP",
											"type": "String"
										},
										"sink": {
											"name": "SALESGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESOFFICE",
											"type": "String"
										},
										"sink": {
											"name": "SALESOFFICE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALESORGANIZATION",
											"type": "String"
										},
										"sink": {
											"name": "SALESORGANIZATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										},
										"sink": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SOLDTOPARTY",
											"type": "String"
										},
										"sink": {
											"name": "SOLDTOPARTY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TOTALNETAMOUNT",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALNETAMOUNT",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										},
										"sink": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CITYNAME",
											"type": "String"
										},
										"sink": {
											"name": "CITYNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "POSTALCODE",
											"type": "String"
										},
										"sink": {
											"name": "POSTALCODE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "S4D_SalesOrderHeaders",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SynSalesOrderHeaders",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/S4D_SalesOrderHeaders')]",
				"[concat(variables('factoryId'), '/datasets/SynSalesOrderHeaders')]",
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesOrderHeadersFromS4DDF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExtractSalesOrderHeadersToAzDL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzDataLakeGen2",
									"type": "LinkedServiceReference"
								},
								"path": "synapsestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MANDT",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "MANDT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENT",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SALESDOCUMENT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SDDOCUMENTCATEGORY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SALESDOCUMENTTYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SALESDOCUMENTPROCESSINGTYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONDATE",
											"type": "String",
											"physicalType": "D"
										},
										"sink": {
											"name": "CREATIONDATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CREATIONTIME",
											"type": "String",
											"physicalType": "T"
										},
										"sink": {
											"name": "CREATIONTIME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATE",
											"type": "String",
											"physicalType": "D"
										},
										"sink": {
											"name": "LASTCHANGEDATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal",
											"physicalType": "P"
										},
										"sink": {
											"name": "LASTCHANGEDATETIME",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "SALESORGANIZATION",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SALESORGANIZATION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "DISTRIBUTIONCHANNEL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "ORGANIZATIONDIVISION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALESGROUP",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SALESGROUP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALESOFFICE",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SALESOFFICE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SOLDTOPARTY",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SOLDTOPARTY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERNAME",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "CUSTOMERNAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COUNTRY",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "COUNTRY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CITYNAME",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "CITYNAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "POSTALCODE",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "POSTALCODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERACCOUNTGROUP",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "CUSTOMERACCOUNTGROUP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALESDISTRICT",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "SALESDISTRICT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMERGROUP",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "CUSTOMERGROUP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CREDITCONTROLAREA",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "CREDITCONTROLAREA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "PURCHASEORDERBYCUSTOMER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TOTALNETAMOUNT",
											"type": "Decimal",
											"physicalType": "P"
										},
										"sink": {
											"name": "TOTALNETAMOUNT",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "TRANSACTIONCURRENCY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRICINGDATE",
											"type": "String",
											"physicalType": "D"
										},
										"sink": {
											"name": "PRICINGDATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BILLINGDOCUMENTDATE",
											"type": "String",
											"physicalType": "D"
										},
										"sink": {
											"name": "BILLINGDOCUMENTDATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BILLINGCOMPANYCODE",
											"type": "String",
											"physicalType": "C"
										},
										"sink": {
											"name": "BILLINGCOMPANYCODE",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "S4D_SalesOrderHeaders",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "S4DSalesOrderHeadersCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/S4D_SalesOrderHeaders')]",
				"[concat(variables('factoryId'), '/datasets/S4DSalesOrderHeadersCSV')]",
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UploadPaymentDataToCosmos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UploadPaymentDataToCosmos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "PaymentDataForUpload",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosS4D_Payments",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PaymentDataForUpload')]",
				"[concat(variables('factoryId'), '/datasets/CosmosS4D_Payments')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/myS4S_BD_ISALESDOC_A')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy All Order Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ZBD_ISALESDOC_A",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "myS4SSalesOrdersAll",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "myS4S"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZBD_ISALESDOC_A')]",
				"[concat(variables('factoryId'), '/datasets/myS4SSalesOrdersAll')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/myS4S_BD_ISALESDOC_E')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract Sales Data to DataLake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "",
								"customRfcReadTableFunctionModule": "",
								"rfcTableFields": "BILLINGCOMPANYCODE,BILLINGDOCUMENTDATE,COUNTRY,CREATIONDATE,CREATIONTIME,CREDITCONTROLAREA,CUSTOMERGROUP,CUSTOMERNAME,DISTRIBUTIONCHANNEL,HEADERBILLINGBLOCKREASON,LASTCHANGEDATE,LASTCHANGEDATETIME,MANDT,ORGANIZATIONDIVISION,PRICINGDATE,PURCHASEORDERBYCUSTOMER,SALESDOCUMENT,SALESDOCUMENTPROCESSINGTYPE,SALESDOCUMENTTYPE,SALESGROUP,SALESOFFICE,SALESORGANIZATION,SDDOCUMENTCATEGORY,SOLDTOPARTY,TOTALNETAMOUNT,TRANSACTIONCURRENCY,CITYNAME",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ZBD_ISALESDOC_E",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "myS4SSalesOrders",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "myS4S"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZBD_ISALESDOC_E')]",
				"[concat(variables('factoryId'), '/datasets/myS4SSalesOrders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzDataLakeGen2_NPLMDX')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NPL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('NPLMDX_', formatDateTime(utcnow(),'yyyy-MM-dd-hhmmss'),'.csv')",
							"type": "Expression"
						},
						"folderPath": "NPL/MDX",
						"fileSystem": "sap"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzDataLakeGen2_NPLOpenHub')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NPL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('NPLOpenHub_', formatDateTime(utcnow(),'yyyy-MM-dd-hhmmss'),'.csv')",
							"type": "Expression"
						},
						"folderPath": "NPL/OpenHub",
						"fileSystem": "sap"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzDataLakeGen2_NPLProducts_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NPL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('products_', formatDateTime(utcnow(),'yyyy-MM-dd-hhmmss'),'.csv')",
							"type": "Expression"
						},
						"folderPath": "NPL",
						"fileSystem": "sap"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzDataLakeGen2_NPLProducts_csv_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NPL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('tableproducts_', formatDateTime(utcnow(),'yyyy-MM-dd-hhmmss'),'.csv')",
							"type": "Expression"
						},
						"folderPath": "NPL/TableConnector",
						"fileSystem": "sap"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzDataLakeGen2_NPLProducts_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NPL"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "products.json",
						"folderPath": "NPL",
						"fileSystem": "sap"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzDataLakeGen_NPLProducts_parq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NPL"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "products.parquet",
						"folderPath": "NPL",
						"fileSystem": "sap"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobDelimitedDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bdldftutorial",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"HighWatermarkBlobDirectory": {
						"type": "string"
					},
					"HighWatermarkBlobName": {
						"type": "string"
					},
					"HighWatermarkBlobContainer": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().HighWatermarkBlobName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().HighWatermarkBlobDirectory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().HighWatermarkBlobContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bdldftutorial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStore_NWCustomers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BdlAzDataLake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NorthWind"
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('AzureDataLakeStore_NWCustomers_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('AzureDataLakeStore_NWCustomers_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BdlAzDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BDL_AzDL_NPLProducts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BdlAzDataLake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NPL"
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('BDL_AzDL_NPLProducts_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('BDL_AzDL_NPLProducts_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BdlAzDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BW_NPL_MDX')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NPL_BWMDX",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NPL"
				},
				"annotations": [],
				"type": "SapBwCube",
				"schema": [],
				"typeProperties": {},
				"typePropertites": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NPL_BWMDX')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BW_NPL_OpenHub_NW_C01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NPL_BWOpenHub",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NPL"
				},
				"annotations": [],
				"type": "SapOpenHubTable",
				"schema": [],
				"typeProperties": {
					"openHubDestinationName": "OH_NW_C01"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NPL_BWOpenHub')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BdlAzDL_ES5SalesOrderSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SAP Dev Center"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesOrderSet.csv",
						"folderPath": "ES5/SalesOrderSet",
						"fileSystem": "sap"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BdlAzDL_SAPDev_ProductSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BdlAzDataLake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SAP Dev Center"
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('BdlAzDL_SAPDev_ProductSet_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('BdlAzDL_SAPDev_ProductSet_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BdlAzDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COEPTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "S4DCLNT100",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "COEP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/S4DCLNT100')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosS4D_Payments')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Cosmos_SAPS4D",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"PaymentNr": {
							"type": "string"
						},
						"SalesOrderNr": {
							"type": "string"
						},
						"CustomerNr": {
							"type": "string"
						},
						"CustomerName": {
							"type": "string"
						},
						"PaymentDate": {
							"type": "string"
						},
						"Value": {
							"type": "string"
						},
						"Currency": {
							"type": "string"
						}
					}
				},
				"typeProperties": {
					"collectionName": "paymentData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Cosmos_SAPS4D')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailyGameData_Blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bdldftutorial",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dsFileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Player",
						"type": "String"
					},
					{
						"name": "Time",
						"type": "String"
					},
					{
						"name": "Points",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "[parameters('DailyGameData_Blob_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('DailyGameData_Blob_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bdldftutorial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTextDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Blob to store the max copied request ID from SAP BW Open Hub table as high watermark",
				"linkedServiceName": {
					"referenceName": "bdldftutorial",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"HighWatermarkBlobContainer": {
						"type": "String"
					},
					"HighWatermarkBlobDirectory": {
						"type": "String"
					},
					"HighWatermarkBlobName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().HighWatermarkBlobName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().HighWatermarkBlobDirectory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().HighWatermarkBlobContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bdldftutorial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTextSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DelimitedText sink",
				"linkedServiceName": {
					"referenceName": "bdldftutorial",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DelimitedTextSinkContainer": {
						"type": "string"
					},
					"DelimitedTextSinkDirectory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().DelimitedTextSinkDirectory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().DelimitedTextSinkContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"nullValue": "\\N",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bdldftutorial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ES5SalesOrderSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPDevCenter",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SAP Dev Center"
				},
				"annotations": [],
				"type": "SapEccResource",
				"schema": [],
				"typeProperties": {
					"path": "SalesOrderSet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPDevCenter')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GameData_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bdlsqldatadb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "player",
						"type": "String"
					},
					{
						"name": "time",
						"type": "String"
					},
					{
						"name": "points",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[points]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bdlsqldatadb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MARATableHANA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "S4HHANA",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4H"
				},
				"annotations": [],
				"type": "SapHanaTable",
				"schema": [],
				"typeProperties": {
					"schema": "SAPHANADB",
					"table": "MARA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/S4HHANA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MARAcsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4H"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('mara_', formatDateTime(utcnow(),'yyyy-MM-dd-hhmmss'),'.csv')",
							"type": "Expression"
						},
						"folderPath": "S4H",
						"fileSystem": "sap"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MaintenanceOrdersCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4H"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('aufk_', formatDateTime(utcnow(),'yyyy-MM-dd-hhmmss'),'.csv')",
							"type": "Expression"
						},
						"folderPath": "S4H",
						"fileSystem": "sap"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProductsTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NPLTable",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NPL"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "SEPMRACSHPRODUCT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NPLTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLProducts_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bdlsqldatadb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NPL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "currencycode",
						"type": "String"
					},
					{
						"name": "stockquantity",
						"type": "Int32"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "description",
						"type": "String"
					},
					{
						"name": "subcategoryid",
						"type": "String"
					},
					{
						"name": "subcategoryname",
						"type": "String"
					},
					{
						"name": "maincategoryid",
						"type": "String"
					},
					{
						"name": "maincategoryname",
						"type": "String"
					},
					{
						"name": "supplierid",
						"type": "String"
					},
					{
						"name": "suppliername",
						"type": "String"
					},
					{
						"name": "lastmodified",
						"type": "DateTime"
					},
					{
						"name": "price",
						"type": "Decimal"
					},
					{
						"name": "quantityunit",
						"type": "String"
					},
					{
						"name": "measureunit",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "NPLProducts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bdlsqldatadb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPL_Products')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NPLABAPSystem",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NPL"
				},
				"annotations": [],
				"type": "SapEccResource",
				"structure": [
					{
						"name": "CurrencyCode",
						"type": "String"
					},
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "StockQuantity",
						"type": "Int32"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "SubCategoryId",
						"type": "String"
					},
					{
						"name": "SubCategoryName",
						"type": "String"
					},
					{
						"name": "MainCategoryId",
						"type": "String"
					},
					{
						"name": "MainCategoryName",
						"type": "String"
					},
					{
						"name": "SupplierId",
						"type": "String"
					},
					{
						"name": "SupplierName",
						"type": "String"
					},
					{
						"name": "LastModified",
						"type": "DateTime"
					},
					{
						"name": "Price",
						"type": "Decimal"
					},
					{
						"name": "DimensionHeight",
						"type": "Decimal"
					},
					{
						"name": "DimensionWidth",
						"type": "Decimal"
					},
					{
						"name": "DimensionDepth",
						"type": "Decimal"
					},
					{
						"name": "DimensionUnit",
						"type": "String"
					},
					{
						"name": "ImageUrl",
						"type": "String"
					},
					{
						"name": "QuantityUnit",
						"type": "String"
					},
					{
						"name": "MeasureUnit",
						"type": "String"
					},
					{
						"name": "AverageRating",
						"type": "Decimal"
					},
					{
						"name": "RatingCount",
						"type": "Int32"
					},
					{
						"name": "WeightMeasure",
						"type": "Decimal"
					},
					{
						"name": "WeightUnit",
						"type": "String"
					}
				],
				"typeProperties": {
					"path": "Products"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NPLABAPSystem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NorthWind_Customers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SampleOData",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NorthWind"
				},
				"annotations": [],
				"type": "ODataResource",
				"typeProperties": {
					"path": "Customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SampleOData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PaymentDataForUpload')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "paymentData.csv",
						"folderPath": "paymentUpload",
						"fileSystem": "microhack"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PaymentNr",
						"type": "String"
					},
					{
						"name": "SalesOrderNr",
						"type": "String"
					},
					{
						"name": "CustomerNr",
						"type": "String"
					},
					{
						"name": "CustomerName",
						"type": "String"
					},
					{
						"name": "PaymentDate",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					},
					{
						"name": "Currency",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PaymentsFromAzDL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "payments.csv",
						"folderPath": "payments",
						"fileSystem": "microhack"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Payments_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "payments.csv",
						"folderPath": "payments",
						"fileSystem": "microhack"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Persons_Incremental')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bdldftutorial",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "[parameters('Persons_Incremental_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('Persons_Incremental_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bdldftutorial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Persons_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bdlsqldatadb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "PersonID",
						"type": "Int32"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "LastModifytime",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[persons]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bdlsqldatadb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4DCOEPData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('coep_',pipeline().RunId)",
							"type": "Expression"
						},
						"folderPath": "S4D/COEP",
						"fileSystem": "sap"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4DSalesOrderHeadersCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "salesorderheaders.csv",
						"folderPath": "salesorderheaders",
						"fileSystem": "microhack"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4DSalesOrderItems')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "S4DCLNT100OData",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "SapEccResource",
				"schema": [],
				"typeProperties": {
					"path": "C_Salesorderitemfs"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/S4DCLNT100OData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4DVBAKDataLake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('vbak_',pipeline().RunId,'.csv')",
							"type": "Expression"
						},
						"folderPath": "S4D/VBAK",
						"fileSystem": "sap"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4D_SalesOrderHeaders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "S4DCLNT100",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "ZBD_ISALESDOC_E"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/S4DCLNT100')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4HRest_GetUpdatedSO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "S4HRest",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4H"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "DeltaLinksOfAttrOfZBD_ISALESDOC_1('D20190828122610_000029000')/ChangesAfter",
					"requestMethod": "GET"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/S4HRest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4HSO_Json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPDataLake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4H"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "test.json",
						"folderPath": "SalesOrders",
						"fileSystem": "s4hana"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4HSO_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPDataLake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4H"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('test_',utcnow())",
							"type": "Expression"
						},
						"folderPath": "SalesOrders",
						"fileSystem": "s4hana"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SALESDOCUMENT",
						"type": "String"
					},
					{
						"name": "SDDOCUMENTCATEGORY",
						"type": "String"
					},
					{
						"name": "SALESDOCUMENTTYPE",
						"type": "String"
					},
					{
						"name": "SALESDOCUMENTPROCESSINGTYPE",
						"type": "String"
					},
					{
						"name": "CREATIONDATE",
						"type": "String"
					},
					{
						"name": "CREATIONTIME",
						"type": "String"
					},
					{
						"name": "LASTCHANGEDATE",
						"type": "String"
					},
					{
						"name": "LASTCHANGEDATETIME",
						"type": "String"
					},
					{
						"name": "SALESORGANIZATION",
						"type": "String"
					},
					{
						"name": "DISTRIBUTIONCHANNEL",
						"type": "String"
					},
					{
						"name": "ORAGANIZATIONDIVISION",
						"type": "String"
					},
					{
						"name": "SALESGROUP",
						"type": "String"
					},
					{
						"name": "SALESOFFICE",
						"type": "String"
					},
					{
						"name": "PURCHASEORDERBYCUSTOMER",
						"type": "String"
					},
					{
						"name": "TRANSACTIONCURRENCY",
						"type": "String"
					},
					{
						"name": "PRICINGDATA",
						"type": "String"
					},
					{
						"name": "RETAILPROMOTION",
						"type": "String"
					},
					{
						"name": "SALESDOCUMENTCONDITION",
						"type": "String"
					},
					{
						"name": "ODQ_CHANGEMODE",
						"type": "String"
					},
					{
						"name": "ODQ_ENTITYCNTR",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4H_DeltaTokens')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "S4H_ODP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4H"
				},
				"annotations": [],
				"type": "SapEccResource",
				"schema": [],
				"typeProperties": {
					"path": "DeltaLinksOfAttrOfZBD_ISALESDOC_1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/S4H_ODP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4H_SalesOrderByToken')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "S4H_ODP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Token": {
						"type": "string",
						"defaultValue": "D20190716141524_000029000"
					}
				},
				"folder": {
					"name": "S4H"
				},
				"annotations": [],
				"type": "SapEccResource",
				"schema": [],
				"typeProperties": {
					"path": {
						"value": "@concat('DeltaLinksOfAttrOfZBD_ISALESDOC_1(%27',dataset().Token, '%27)/ChangesAfter')",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/S4H_ODP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4H_SalesOrders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "S4H - SAP CAL",
				"linkedServiceName": {
					"referenceName": "S4H_ODP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4H"
				},
				"annotations": [],
				"type": "SapEccResource",
				"schema": [],
				"typeProperties": {
					"path": "AttrOfZBD_ISALESDOC_1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/S4H_ODP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4H_SalesOrdersByDeltaToken')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "S4H_ODP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4H"
				},
				"annotations": [],
				"type": "SapEccResource",
				"schema": [],
				"typeProperties": {
					"path": "DeltaLinksOfAttrOfZBD_ISALESDOC_1('D20190723092859_000029000')/ChangesAfter"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/S4H_ODP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4H_SalesOrdersSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bdlsqldatadb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4H"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SALESDOCUMENT",
						"type": "nvarchar"
					},
					{
						"name": "SDDOCUMENTCATEGORY",
						"type": "nvarchar"
					},
					{
						"name": "SALESDOCUMENTTYPE",
						"type": "nvarchar"
					},
					{
						"name": "SALESDOCUMENTPROCESSINGTYPE",
						"type": "nvarchar"
					},
					{
						"name": "CREATIONDATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CREATIONTIME",
						"type": "time",
						"scale": 7
					},
					{
						"name": "LASTCHANGEDATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LASTCHANGEDATETIME",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "SALESORGANIZATION",
						"type": "nvarchar"
					},
					{
						"name": "DISTRIBUTIONCHANNEL",
						"type": "nvarchar"
					},
					{
						"name": "ORGANIZATIONDIVISION",
						"type": "nvarchar"
					},
					{
						"name": "SALESGROUP",
						"type": "nvarchar"
					},
					{
						"name": "SALESOFFICE",
						"type": "nvarchar"
					},
					{
						"name": "TRANSACTIONCURRENCY",
						"type": "nvarchar"
					},
					{
						"name": "PRICINGDATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RETAILPROMOTION",
						"type": "nvarchar"
					},
					{
						"name": "SALESDOCUMENTCONDITION",
						"type": "nvarchar"
					},
					{
						"name": "ODQ_CHANGEMODE",
						"type": "nvarchar"
					},
					{
						"name": "ODQ_ENTITYCNTR",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[S4HSalesOrders]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bdlsqldatadb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4HoData_getSalesOrdersByToken')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "S4HOData",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4H"
				},
				"annotations": [],
				"type": "ODataResource",
				"typeProperties": {
					"path": "DeltaLinksOfAttrOfZBD_ISALESDOC_1('D20190828122610_000029000')/ChangesAfter"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/S4HOData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4SVBAK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "S4SGBBDemoTableCon",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "VBAK"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/S4SGBBDemoTableCon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPDevCenter_ProductSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPDevCenter",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SAP Dev Center"
				},
				"annotations": [],
				"type": "SapEccResource",
				"structure": [
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "TypeCode",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "NameLanguage",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "DescriptionLanguage",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "SupplierName",
						"type": "String"
					},
					{
						"name": "TaxTarifCode",
						"type": "Int16"
					},
					{
						"name": "MeasureUnit",
						"type": "String"
					},
					{
						"name": "WeightMeasure",
						"type": "Decimal"
					},
					{
						"name": "WeightUnit",
						"type": "String"
					},
					{
						"name": "CurrencyCode",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "Decimal"
					},
					{
						"name": "Width",
						"type": "Decimal"
					},
					{
						"name": "Depth",
						"type": "Decimal"
					},
					{
						"name": "Height",
						"type": "Decimal"
					},
					{
						"name": "DimUnit",
						"type": "String"
					},
					{
						"name": "CreatedAt",
						"type": "DateTime"
					},
					{
						"name": "ChangedAt",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"path": "ProductSet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPDevCenter')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPOHDSource_Incremental')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SAP BW Open Hub table source",
				"linkedServiceName": {
					"referenceName": "NPL_BWOpenHub",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BaseReqeustId": {
						"type": "Int"
					},
					"SAPOpenHubDestinationName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SapOpenHubTable",
				"schema": [],
				"typeProperties": {
					"openHubDestinationName": {
						"value": "@dataset().SAPOpenHubDestinationName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NPL_BWOpenHub')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPTableSource_Incremental')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NPLTable",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SapTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().SapTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NPLTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SynPaymentsS4D')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bdlSynapsAnalytics",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "PaymentNr",
						"type": "nvarchar"
					},
					{
						"name": "SalesOrderNr",
						"type": "nvarchar"
					},
					{
						"name": "CustomerNr",
						"type": "nvarchar"
					},
					{
						"name": "CustomerName",
						"type": "nvarchar"
					},
					{
						"name": "PaymentDate",
						"type": "date"
					},
					{
						"name": "PaymentValue",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Currency",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Payments"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bdlSynapsAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SynS4DSalesOrderItems')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bdlSynapsAnalytics",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "SalesOrder",
						"type": "nvarchar"
					},
					{
						"name": "SalesOrderItem",
						"type": "nvarchar"
					},
					{
						"name": "SalesOrderItemText",
						"type": "nvarchar"
					},
					{
						"name": "SoldToParty",
						"type": "nvarchar"
					},
					{
						"name": "MaterialByCustomer",
						"type": "nvarchar"
					},
					{
						"name": "MaterialName",
						"type": "nvarchar"
					},
					{
						"name": "Material",
						"type": "nvarchar"
					},
					{
						"name": "ShipToParty",
						"type": "nvarchar"
					},
					{
						"name": "FullName",
						"type": "nvarchar"
					},
					{
						"name": "SDProcessStatus",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryStatus",
						"type": "nvarchar"
					},
					{
						"name": "SDDocumentRejectionStatus",
						"type": "nvarchar"
					},
					{
						"name": "SalesDocumentRjcnReason",
						"type": "nvarchar"
					},
					{
						"name": "RequestedQuantity",
						"type": "decimal",
						"precision": 15,
						"scale": 3
					},
					{
						"name": "RequestedQuantityUnit",
						"type": "nvarchar"
					},
					{
						"name": "TransactionCurrency",
						"type": "nvarchar"
					},
					{
						"name": "NetAmount",
						"type": "decimal",
						"precision": 16,
						"scale": 3
					},
					{
						"name": "MaterialGroup",
						"type": "nvarchar"
					},
					{
						"name": "Batch",
						"type": "nvarchar"
					},
					{
						"name": "ProductionPlant",
						"type": "nvarchar"
					},
					{
						"name": "StorageLocation",
						"type": "nvarchar"
					},
					{
						"name": "ShippingPointName",
						"type": "nvarchar"
					},
					{
						"name": "ShippingPoint",
						"type": "nvarchar"
					},
					{
						"name": "SalesOrderItemCategory",
						"type": "nvarchar"
					},
					{
						"name": "BillingBlockCriticality",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "ItemBillingBlockReason",
						"type": "nvarchar"
					},
					{
						"name": "OrderRelatedBillingStatus",
						"type": "nvarchar"
					},
					{
						"name": "RequestedDeliveryDate",
						"type": "date"
					},
					{
						"name": "HigherLevelItem",
						"type": "nvarchar"
					},
					{
						"name": "SalesOrderProcessingType",
						"type": "nvarchar"
					},
					{
						"name": "RequirementSegment",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SalesOrderItems"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bdlSynapsAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SynSalesOrderHeaders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bdlSynapsAnalytics",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "BILLINGCOMPANYCODE",
						"type": "nvarchar"
					},
					{
						"name": "BILLINGDOCUMENTDATE",
						"type": "date"
					},
					{
						"name": "COUNTRY",
						"type": "nvarchar"
					},
					{
						"name": "CREATIONDATE",
						"type": "date"
					},
					{
						"name": "CREATIONTIME",
						"type": "time",
						"scale": 7
					},
					{
						"name": "CREDITCONTROLAREA",
						"type": "nvarchar"
					},
					{
						"name": "CUSTOMERACCOUNTGROUP",
						"type": "nvarchar"
					},
					{
						"name": "CUSTOMERGROUP",
						"type": "nvarchar"
					},
					{
						"name": "CUSTOMERNAME",
						"type": "nvarchar"
					},
					{
						"name": "DISTRIBUTIONCHANNEL",
						"type": "nvarchar"
					},
					{
						"name": "HEADERBILLINGBLOCKREASON",
						"type": "nvarchar"
					},
					{
						"name": "LASTCHANGEDATE",
						"type": "date"
					},
					{
						"name": "LASTCHANGEDATETIME",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "MANDT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ORGANIZATIONDIVISION",
						"type": "nvarchar"
					},
					{
						"name": "PRICINGDATE",
						"type": "date"
					},
					{
						"name": "PURCHASEORDERBYCUSTOMER",
						"type": "nvarchar"
					},
					{
						"name": "SALESDISTRICT",
						"type": "nvarchar"
					},
					{
						"name": "SALESDOCUMENT",
						"type": "nvarchar"
					},
					{
						"name": "SALESDOCUMENTPROCESSINGTYPE",
						"type": "nvarchar"
					},
					{
						"name": "SALESDOCUMENTTYPE",
						"type": "nvarchar"
					},
					{
						"name": "SALESGROUP",
						"type": "nvarchar"
					},
					{
						"name": "SALESOFFICE",
						"type": "nvarchar"
					},
					{
						"name": "SALESORGANIZATION",
						"type": "nvarchar"
					},
					{
						"name": "SDDOCUMENTCATEGORY",
						"type": "nvarchar"
					},
					{
						"name": "SOLDTOPARTY",
						"type": "nvarchar"
					},
					{
						"name": "TOTALNETAMOUNT",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "TRANSACTIONCURRENCY",
						"type": "nvarchar"
					},
					{
						"name": "CITYNAME",
						"type": "nvarchar"
					},
					{
						"name": "POSTALCODE",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SalesOrderHeaders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bdlSynapsAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SynSalesOrderHeaders2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bdlSynapsAnalytics",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "BILLINGCOMPANYCODE",
						"type": "nvarchar"
					},
					{
						"name": "BILLINGDOCUMENTDATE",
						"type": "date"
					},
					{
						"name": "COUNTRY",
						"type": "nvarchar"
					},
					{
						"name": "CREATIONDATE",
						"type": "date"
					},
					{
						"name": "CREATIONTIME",
						"type": "nvarchar"
					},
					{
						"name": "CREDITCONTROLAREA",
						"type": "nvarchar"
					},
					{
						"name": "CUSTOMERACCOUNTGROUP",
						"type": "nvarchar"
					},
					{
						"name": "CUSTOMERGROUP",
						"type": "nvarchar"
					},
					{
						"name": "CUSTOMERNAME",
						"type": "nvarchar"
					},
					{
						"name": "DISTRIBUTIONCHANNEL",
						"type": "nvarchar"
					},
					{
						"name": "LASTCHANGEDATE",
						"type": "date"
					},
					{
						"name": "LASTCHANGEDATETIME",
						"type": "decimal",
						"precision": 21,
						"scale": 0
					},
					{
						"name": "MANDT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ORGANIZATIONDIVISION",
						"type": "nvarchar"
					},
					{
						"name": "PRICINGDATE",
						"type": "date"
					},
					{
						"name": "PURCHASEORDERBYCUSTOMER",
						"type": "nvarchar"
					},
					{
						"name": "SALESDISTRICT",
						"type": "nvarchar"
					},
					{
						"name": "SALESDOCUMENT",
						"type": "nvarchar"
					},
					{
						"name": "SALESDOCUMENTPROCESSINGTYPE",
						"type": "nvarchar"
					},
					{
						"name": "SALESDOCUMENTTYPE",
						"type": "nvarchar"
					},
					{
						"name": "SALESGROUP",
						"type": "nvarchar"
					},
					{
						"name": "SALESOFFICE",
						"type": "nvarchar"
					},
					{
						"name": "SALESORGANIZATION",
						"type": "nvarchar"
					},
					{
						"name": "SDDOCUMENTCATEGORY",
						"type": "nvarchar"
					},
					{
						"name": "SOLDTOPARTY",
						"type": "nvarchar"
					},
					{
						"name": "TOTALNETAMOUNT",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "TRANSACTIONCURRENCY",
						"type": "nvarchar"
					},
					{
						"name": "CITYNAME",
						"type": "nvarchar"
					},
					{
						"name": "POSTALCODE",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SalesOrderHeaders2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bdlSynapsAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VBAKTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "S4DCLNT100",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "VBAK"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/S4DCLNT100')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WaterMark_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bdlsqldatadb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NPL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "TableName",
						"type": "String"
					},
					{
						"name": "WatermarkValue",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[watermarktable]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bdlsqldatadb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZBD_ISALESDOC_A')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myGBBDemoTableCon",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "myGBBS4S"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "ZBD_ISALESDOC_A"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myGBBDemoTableCon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZBD_ISALESDOC_E')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myGBBDemoTableCon",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "myGBBS4S"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "ZBD_ISALESDOC_E"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myGBBDemoTableCon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/myMicroHackCosmosPaymentData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myMicroHackCosmosDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "Payments"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myMicroHackCosmosDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/myS4SSalesOrders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "myGBBS4S"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('myS4SSalesOrders',utcnow(),'.csv')",
							"type": "Expression"
						},
						"folderPath": "myS4S",
						"fileSystem": "sap"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/myS4SSalesOrdersAll')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "myGBBS4S"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "myS4SSalesOrdersAll.csv",
						"folderPath": "myS4S",
						"fileSystem": "sap"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/myS4SSalesOrdersIn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "myGBBS4S"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "myS4SSalesOrders2021-01-18T09:28:03.3604797Z.csv",
						"folderPath": "myS4S",
						"fileSystem": "sap"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "BILLINGCOMPANYCODE",
						"type": "String"
					},
					{
						"name": "BILLINGDOCUMENTDATE",
						"type": "String"
					},
					{
						"name": "COUNTRY",
						"type": "String"
					},
					{
						"name": "CREATIONDATE",
						"type": "String"
					},
					{
						"name": "CREATIONTIME",
						"type": "String"
					},
					{
						"name": "CREDITCONTROLAREA",
						"type": "String"
					},
					{
						"name": "CUSTOMERGROUP",
						"type": "String"
					},
					{
						"name": "CUSTOMERNAME",
						"type": "String"
					},
					{
						"name": "DISTRIBUTIONCHANNEL",
						"type": "String"
					},
					{
						"name": "HEADERBILLINGBLOCKREASON",
						"type": "String"
					},
					{
						"name": "LASTCHANGEDATE",
						"type": "String"
					},
					{
						"name": "LASTCHANGEDATETIME",
						"type": "String"
					},
					{
						"name": "MANDT",
						"type": "String"
					},
					{
						"name": "ORGANIZATIONDIVISION",
						"type": "String"
					},
					{
						"name": "PRICINGDATE",
						"type": "String"
					},
					{
						"name": "PURCHASEORDERBYCUSTOMER",
						"type": "String"
					},
					{
						"name": "SALESDOCUMENT",
						"type": "String"
					},
					{
						"name": "SALESDOCUMENTPROCESSINGTYPE",
						"type": "String"
					},
					{
						"name": "SALESDOCUMENTTYPE",
						"type": "String"
					},
					{
						"name": "SALESGROUP",
						"type": "String"
					},
					{
						"name": "SALESOFFICE",
						"type": "String"
					},
					{
						"name": "SALESORGANIZATION",
						"type": "String"
					},
					{
						"name": "SDDOCUMENTCATEGORY",
						"type": "String"
					},
					{
						"name": "SOLDTOPARTY",
						"type": "String"
					},
					{
						"name": "TOTALNETAMOUNT",
						"type": "String"
					},
					{
						"name": "TRANSACTIONCURRENCY",
						"type": "String"
					},
					{
						"name": "CITYNAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADFTest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('ADFTest_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('ADFTest_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzDataLakeGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzDataLakeGen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzDataLakeGen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BdlAzDataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('BdlAzDataLake_properties_typeProperties_dataLakeStoreUri')]",
					"tenant": "[parameters('BdlAzDataLake_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('BdlAzDataLake_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('BdlAzDataLake_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cosmos_SAPS4D')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('Cosmos_SAPS4D_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLABAPSystem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapEcc",
				"typeProperties": {
					"url": "[parameters('NPLABAPSystem_properties_typeProperties_url')]",
					"username": "[parameters('NPLABAPSystem_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('NPLABAPSystem_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPLTable')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('NPLTable_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('NPLTable_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('NPLTable_password')]"
					},
					"server": "[parameters('NPLTable_properties_typeProperties_server')]",
					"systemNumber": "[parameters('NPLTable_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SAPADFRti",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SAPADFRti')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPL_BWMDX')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapBw",
				"typeProperties": {
					"server": "[parameters('NPL_BWMDX_properties_typeProperties_server')]",
					"systemNumber": "[parameters('NPL_BWMDX_properties_typeProperties_systemNumber')]",
					"clientId": "[parameters('NPL_BWMDX_properties_typeProperties_clientId')]",
					"userName": "[parameters('NPL_BWMDX_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('NPL_BWMDX_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SAPADFRti",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SAPADFRti')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NPL_BWOpenHub')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "NPL_BWOpenHub",
				"annotations": [],
				"type": "SapOpenHub",
				"typeProperties": {
					"clientId": "[parameters('NPL_BWOpenHub_properties_typeProperties_clientId')]",
					"language": "EN",
					"userName": "[parameters('NPL_BWOpenHub_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('NPL_BWOpenHub_password')]"
					},
					"server": "[parameters('NPL_BWOpenHub_properties_typeProperties_server')]",
					"systemNumber": "[parameters('NPL_BWOpenHub_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SAPADFRti",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SAPADFRti')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODPFunction')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('ODPFunction_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('ODPFunction_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OData1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "OData",
				"typeProperties": {
					"url": "[parameters('OData1_properties_typeProperties_url')]",
					"authenticationType": "Anonymous",
					"authHeaders": {
						"APIKey": {
							"type": "SecureString",
							"value": "**********"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4DCLNT100')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('S4DCLNT100_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('S4DCLNT100_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('S4DCLNT100_password')]"
					},
					"server": "[parameters('S4DCLNT100_properties_typeProperties_server')]",
					"systemNumber": "[parameters('S4DCLNT100_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SAPADFRti",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SAPADFRti')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4DCLNT100OData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapEcc",
				"typeProperties": {
					"url": "[parameters('S4DCLNT100OData_properties_typeProperties_url')]",
					"username": "[parameters('S4DCLNT100OData_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('S4DCLNT100OData_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4HHANA')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapHana",
				"typeProperties": {
					"connectionString": "[parameters('S4HHANA_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SAPADFRti",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SAPADFRti')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4HOData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "OData",
				"typeProperties": {
					"url": "[parameters('S4HOData_properties_typeProperties_url')]",
					"authenticationType": "Basic",
					"userName": "[parameters('S4HOData_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('S4HOData_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4HRest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('S4HRest_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('S4HRest_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('S4HRest_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4H_ODP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "S4H SAP Call",
				"annotations": [],
				"type": "SapEcc",
				"typeProperties": {
					"url": "[parameters('S4H_ODP_properties_typeProperties_url')]",
					"username": "[parameters('S4H_ODP_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('S4H_ODP_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4SGBBDemoTableCon')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('S4SGBBDemoTableCon_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('S4SGBBDemoTableCon_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('S4SGBBDemoTableCon_password')]"
					},
					"server": "[parameters('S4SGBBDemoTableCon_properties_typeProperties_server')]",
					"systemNumber": "[parameters('S4SGBBDemoTableCon_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SAPADFRti",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SAPADFRti')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPDataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('SAPDataLake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('SAPDataLake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPDevCenter')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapEcc",
				"typeProperties": {
					"url": "[parameters('SAPDevCenter_properties_typeProperties_url')]",
					"username": "[parameters('SAPDevCenter_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SAPDevCenter_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPoData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "OData",
				"typeProperties": {
					"url": "[parameters('SAPoData_properties_typeProperties_url')]",
					"authenticationType": "Basic",
					"userName": "[parameters('SAPoData_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SAPoData_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SampleOData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "OData",
				"typeProperties": {
					"url": "[parameters('SampleOData_properties_typeProperties_url')]",
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1659125483491971.11.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('adfdatabricks_accessToken')]"
					},
					"existingClusterId": "0702-145622-joust399"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bdlSynapsAnalytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('bdlSynapsAnalytics_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bdldftutorial')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('bdldftutorial_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bdlsqldatadb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('bdlsqldatadb_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/myGBBDemoTableCon')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('myGBBDemoTableCon_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('myGBBDemoTableCon_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('myGBBDemoTableCon_password')]"
					},
					"server": "[parameters('myGBBDemoTableCon_properties_typeProperties_server')]",
					"systemNumber": "[parameters('myGBBDemoTableCon_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SAPADFRti",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SAPADFRti')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/myMicroHackCosmosDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('myMicroHackCosmosDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPADFRti')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Azure Data Factory runtime - SAP Connector",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLakePaymentsToSynapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PaymentsFromAzDL",
								"type": "DatasetReference"
							},
							"name": "PaymentsAzDL"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SynPaymentsS4D",
								"type": "DatasetReference"
							},
							"name": "SynapePayments"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tPaymentNr as string,\n\t\tSalesOrderNr as string,\n\t\tCustomerNr as string,\n\t\tCustomerName as string,\n\t\tPaymentDate as date 'yyyy-MM-dd',\n\t\tValue as decimal(15,2) '000,000,000.000',\n\t\tCurrency as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdateFormats: ['yyyy-MM-dd']) ~> PaymentsAzDL\nPaymentsAzDL sink(input(\n\t\tPaymentNr as string,\n\t\tSalesOrderNr as string,\n\t\tCustomerNr as string,\n\t\tCustomerName as string,\n\t\tPaymentDate as date,\n\t\tPaymentValue as decimal(15,2),\n\t\tCurrency as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tmapColumn(\n\t\tPaymentNr,\n\t\tSalesOrderNr,\n\t\tCustomerNr,\n\t\tCustomerName,\n\t\tPaymentDate,\n\t\tPaymentValue = Value,\n\t\tCurrency\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SynapePayments"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PaymentsFromAzDL')]",
				"[concat(variables('factoryId'), '/datasets/SynPaymentsS4D')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractPaymentsFromCosmosDB')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MicroHack"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CosmosS4D_Payments",
								"type": "DatasetReference"
							},
							"name": "PaymentDataCosmosDB"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SynPaymentsS4D",
								"type": "DatasetReference"
							},
							"name": "PaymentDateSynapse"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tPaymentNr as string,\n\t\tSalesOrderNr as string,\n\t\tCustomerNr as string,\n\t\tCustomerName as string,\n\t\tPaymentDate as string,\n\t\tValue as string,\n\t\tCurrency as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'document') ~> PaymentDataCosmosDB\nPaymentDataCosmosDB derive(PaymentDateD = toDate(PaymentDate , 'yyyy-MM-dd'),\n\t\tValueD = toDecimal(Value, 15, 2)) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tPaymentNr as string,\n\t\tSalesOrderNr as string,\n\t\tCustomerNr as string,\n\t\tCustomerName as string,\n\t\tPaymentDate as date,\n\t\tPaymentValue as decimal(15,2),\n\t\tCurrency as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tmapColumn(\n\t\tPaymentNr,\n\t\tSalesOrderNr,\n\t\tCustomerNr,\n\t\tCustomerName,\n\t\tPaymentDate = PaymentDateD,\n\t\tPaymentValue = ValueD,\n\t\tCurrency\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PaymentDateSynapse"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CosmosS4D_Payments')]",
				"[concat(variables('factoryId'), '/datasets/SynPaymentsS4D')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RetrieveSAPTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Retrieve Table List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ControlTable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "ForEachTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Retrieve Table List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Retrieve Table List').output",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy SAP Table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "S4DTable",
											"type": "DatasetReference",
											"parameters": {
												"tableName": {
													"value": "@item().tableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "S4DDataLakeFile",
											"type": "DatasetReference",
											"parameters": {
												"dirName": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"fileName": {
													"value": "@concat(item().tablename,'_',pipeline().RunId,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ControlTable')]",
				"[concat(variables('factoryId'), '/datasets/S4DTable')]",
				"[concat(variables('factoryId'), '/datasets/S4DDataLakeFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your data destination store.",
				"linkedServiceName": {
					"referenceName": "bdldftutorial",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Data_Destination_Container": {
						"type": "String"
					},
					"Data_Destination_Directory": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@{dataset().Data_Destination_Directory}",
							"type": "Expression"
						},
						"container": {
							"value": "@{dataset().Data_Destination_Container}",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bdldftutorial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4DDataLakeFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dirName": {
						"type": "string",
						"defaultValue": "dirName"
					},
					"fileName": {
						"type": "string",
						"defaultValue": "fileName"
					}
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dirName",
							"type": "Expression"
						},
						"fileSystem": "sap/S4D"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4DTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "S4DCLNT100",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string",
						"defaultValue": "table"
					}
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/S4DCLNT100')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ControlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bdlsqldatadb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "S4D_MicroHack"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tableName",
						"type": "nvarchar"
					},
					{
						"name": "fieldName",
						"type": "nvarchar"
					},
					{
						"name": "filterValue",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Control"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bdlsqldatadb')]"
			]
		}
	]
}